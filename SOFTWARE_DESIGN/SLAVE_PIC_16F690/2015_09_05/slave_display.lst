

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Sep 13 12:13:27 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
    45  2007  FCF4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFCFF ;#
    46                           	FNCALL	_main,_SYSTEM_INIT
    47                           	FNCALL	_main,_LCD_INIT
    48                           	FNCALL	_main,_UART_INIT
    49                           	FNCALL	_main,_DelayMs
    50                           	FNCALL	_main,_Lcd_String
    51                           	FNCALL	_main,_Lcd_Write
    52                           	FNCALL	_main,_SendStringSerially
    53                           	FNCALL	_SYSTEM_INIT,_DelayMs
    54                           	FNCALL	_SendStringSerially,_SendByteSerially
    55                           	FNCALL	_UART_INIT,___aldiv
    56                           	FNCALL	_LCD_INIT,_DelayMs
    57                           	FNCALL	_LCD_INIT,_Lcd_Write
    58                           	FNCALL	_Lcd_String,_Lcd_Write
    59                           	FNCALL	_Lcd_String,_DelayMs
    60                           	FNROOT	_main
    61                           	FNCALL	_ISR,_Lcd_Char
    62                           	FNCALL	_Lcd_Char,i1_Lcd_Write
    63                           	FNCALL	intlevel1,_ISR
    64                           	global	intlevel1
    65                           	FNROOT	intlevel1
    66                           	global	_asciitable
    67                           psect	idataBANK0,class=CODE,space=0,delta=2
    68                           global __pidataBANK0
    69  0363                     __pidataBANK0:
    70                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
    71                           	line	10
    72                           
    73                           ;initializer for _asciitable
    74  0363  3430               	retlw	030h
    75  0364  3431               	retlw	031h
    76  0365  3432               	retlw	032h
    77  0366  3433               	retlw	033h
    78  0367  3434               	retlw	034h
    79  0368  3435               	retlw	035h
    80  0369  3436               	retlw	036h
    81  036A  3437               	retlw	037h
    82  036B  3438               	retlw	038h
    83  036C  3439               	retlw	039h
    84                           	global	_PORTC
    85  0007                     _PORTC	set	7
    86                           	global	_RCREG
    87  001A                     _RCREG	set	26
    88                           	global	_TXREG
    89  0019                     _TXREG	set	25
    90                           	global	_CARRY
    91  0018                     _CARRY	set	24
    92                           	global	_CREN
    93  00C4                     _CREN	set	196
    94                           	global	_GIE
    95  005F                     _GIE	set	95
    96                           	global	_OERR
    97  00C1                     _OERR	set	193
    98                           	global	_PEIE
    99  005E                     _PEIE	set	94
   100                           	global	_RA4
   101  002C                     _RA4	set	44
   102                           	global	_RA5
   103  002D                     _RA5	set	45
   104                           	global	_RCIF
   105  0065                     _RCIF	set	101
   106                           	global	_SPEN
   107  00C7                     _SPEN	set	199
   108                           	global	_TXIF
   109  0064                     _TXIF	set	100
   110                           	global	_SPBRG
   111  0099                     _SPBRG	set	153
   112                           	global	_TRISA
   113  0085                     _TRISA	set	133
   114                           	global	_TRISC
   115  0087                     _TRISC	set	135
   116                           	global	_BRGH
   117  04C2                     _BRGH	set	1218
   118                           	global	_IRCF0
   119  047C                     _IRCF0	set	1148
   120                           	global	_IRCF1
   121  047D                     _IRCF1	set	1149
   122                           	global	_IRCF2
   123  047E                     _IRCF2	set	1150
   124                           	global	_RCIE
   125  0465                     _RCIE	set	1125
   126                           	global	_SYNC
   127  04C4                     _SYNC	set	1220
   128                           	global	_TXEN
   129  04C5                     _TXEN	set	1221
   130                           	global	_WPUA2
   131  04AA                     _WPUA2	set	1194
   132                           	global	_nRABPU
   133  040F                     _nRABPU	set	1039
   134                           	global	_ANSEL
   135  011E                     _ANSEL	set	286
   136                           	global	_ANSELH
   137  011F                     _ANSELH	set	287
   138                           	global	_EEADR
   139  010D                     _EEADR	set	269
   140                           	global	_EEDATA
   141  010C                     _EEDATA	set	268
   142                           	global	_EECON1
   143  018C                     _EECON1	set	396
   144                           	global	_EECON2
   145  018D                     _EECON2	set	397
   146                           	global	_RD
   147  0C60                     _RD	set	3168
   148                           	global	_WR
   149  0C61                     _WR	set	3169
   150                           	global	_WREN
   151  0C62                     _WREN	set	3170
   152                           psect	strings,class=STRING,delta=2
   153                           global __pstrings
   154  0300                     __pstrings:
   155                           ;	global	stringdir,stringtab,__stringbase
   156  0300                     stringtab:
   157                           ;	String table - string pointers are 1 byte each
   158  0300                     stringcode:stringdir:
      + 0300                     stringdir:	
   159  0300  3003               movlw high(stringdir)
   160  0301  008A               movwf pclath
   161  0302  0804               movf fsr,w
   162  0303  0A84               incf fsr
   163  0304  0782               	addwf pc
   164  0305                     __stringbase:
   165  0305  3400               	retlw	0
   166                           psect	strings
   167                           	
   168  0306                     STR_1:	
   169  0306  3450               	retlw	80	;'P'
   170  0307  3449               	retlw	73	;'I'
   171  0308  3443               	retlw	67	;'C'
   172  0309  3443               	retlw	67	;'C'
   173  030A  3449               	retlw	73	;'I'
   174  030B  3452               	retlw	82	;'R'
   175  030C  3443               	retlw	67	;'C'
   176  030D  3455               	retlw	85	;'U'
   177  030E  3449               	retlw	73	;'I'
   178  030F  3454               	retlw	84	;'T'
   179  0310  342E               	retlw	46	;'.'
   180  0311  3443               	retlw	67	;'C'
   181  0312  344F               	retlw	79	;'O'
   182  0313  344D               	retlw	77	;'M'
   183  0314  3400               	retlw	0
   184                           psect	strings
   185                           	
   186  0315                     STR_2:	
   187  0315  3457               	retlw	87	;'W'
   188  0316  3465               	retlw	101	;'e'
   189  0317  346C               	retlw	108	;'l'
   190  0318  3463               	retlw	99	;'c'
   191  0319  346F               	retlw	111	;'o'
   192  031A  346D               	retlw	109	;'m'
   193  031B  3465               	retlw	101	;'e'
   194  031C  3400               	retlw	0
   195                           psect	strings
   196                           	file	"slave_display.as"
   197                           	line	#
   198                           psect cinit,class=CODE,delta=2
   199                           global start_initialization
   200  0348                     start_initialization:
   201                           
   202                           psect	dataBANK0,class=BANK0,space=1
   203                           global __pdataBANK0
   204  0037                     __pdataBANK0:
   205                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
   206  0037                     _asciitable:
   207  0037                            ds      10
   208                           
   209                           global btemp
   210                           psect inittext,class=CODE,delta=2
   211                           global init_fetch,btemp
   212                           ;	Called with low address in FSR and high address in W
   213  0337                     init_fetch:
   214  0337  087E               	movf btemp,w
   215  0338  008A               	movwf pclath
   216  0339  087F               	movf btemp+1,w
   217  033A  0082               	movwf pc
   218                           global init_ram
   219                           ;Called with:
   220                           ;	high address of idata address in btemp 
   221                           ;	low address of idata address in btemp+1 
   222                           ;	low address of data in FSR
   223                           ;	high address + 1 of data in btemp-1
   224  033B                     init_ram:
   225  033B  118A  2337  118A   	fcall init_fetch
   226  033E  0080               	movwf indf,f
   227  033F  0A84               	incf fsr,f
   228  0340  0804               	movf fsr,w
   229  0341  067D               	xorwf btemp-1,w
   230  0342  1903               	btfsc status,2
   231  0343  3400               	retlw 0
   232  0344  0AFF               	incf btemp+1,f
   233  0345  1903               	btfsc status,2
   234  0346  0AFE               	incf btemp,f
   235  0347  2B3B               	goto init_ram
   236                           ; Initialize objects allocated to BANK0
   237                           psect cinit,class=CODE,delta=2
   238                           global init_ram, __pidataBANK0
   239  0348  1383               	bcf	status, 7	;select IRP bank0
   240  0349  3041               	movlw low(__pdataBANK0+10)
   241  034A  00FD               	movwf btemp-1,f
   242  034B  3003               	movlw high(__pidataBANK0)
   243  034C  00FE               	movwf btemp,f
   244  034D  3063               	movlw low(__pidataBANK0)
   245  034E  00FF               	movwf btemp+1,f
   246  034F  3037               	movlw low(__pdataBANK0)
   247  0350  0084               	movwf fsr,f
   248  0351  118A  233B  118A   	fcall init_ram
   249                           psect cinit,class=CODE,delta=2
   250                           global end_of_initialization
   251                           
   252                           ;End of C runtime variable initialization code
   253                           
   254  0354                     end_of_initialization:
   255  0354  0183               clrf status
   256  0355  118A  2A04         ljmp _main	;jump to C main() function
   257                           psect	cstackCOMMON,class=COMMON,space=1
   258                           global __pcstackCOMMON
   259  0070                     __pcstackCOMMON:
   260                           	global	?_Lcd_Char
   261  0070                     ?_Lcd_Char:	; 0 bytes @ 0x0
   262                           	global	?_Lcd_String
   263  0070                     ?_Lcd_String:	; 0 bytes @ 0x0
   264                           	global	?_LCD_INIT
   265  0070                     ?_LCD_INIT:	; 0 bytes @ 0x0
   266                           	global	?_SendByteSerially
   267  0070                     ?_SendByteSerially:	; 0 bytes @ 0x0
   268                           	global	?_SendStringSerially
   269  0070                     ?_SendStringSerially:	; 0 bytes @ 0x0
   270                           	global	?_ISR
   271  0070                     ?_ISR:	; 0 bytes @ 0x0
   272                           	global	?_SYSTEM_INIT
   273  0070                     ?_SYSTEM_INIT:	; 0 bytes @ 0x0
   274                           	global	?_main
   275  0070                     ?_main:	; 0 bytes @ 0x0
   276                           	global	?i1_Lcd_Write
   277  0070                     ?i1_Lcd_Write:	; 0 bytes @ 0x0
   278                           	global	i1Lcd_Write@c
   279  0070                     i1Lcd_Write@c:	; 1 bytes @ 0x0
   280  0070                     	ds	1
   281                           	global	??i1_Lcd_Write
   282  0071                     ??i1_Lcd_Write:	; 0 bytes @ 0x1
   283  0071                     	ds	2
   284                           	global	i1Lcd_Write@rs
   285  0073                     i1Lcd_Write@rs:	; 1 bytes @ 0x3
   286  0073                     	ds	1
   287                           	global	i1Lcd_Write@_dcnt
   288  0074                     i1Lcd_Write@_dcnt:	; 2 bytes @ 0x4
   289  0074                     	ds	2
   290                           	global	i1Lcd_Write@_dcnt_1579
   291  0076                     i1Lcd_Write@_dcnt_1579:	; 2 bytes @ 0x6
   292  0076                     	ds	2
   293                           	global	??_Lcd_Char
   294  0078                     ??_Lcd_Char:	; 0 bytes @ 0x8
   295  0078                     	ds	1
   296                           	global	Lcd_Char@c
   297  0079                     Lcd_Char@c:	; 1 bytes @ 0x9
   298  0079                     	ds	1
   299                           	global	??_ISR
   300  007A                     ??_ISR:	; 0 bytes @ 0xA
   301  007A                     	ds	4
   302                           psect	cstackBANK0,class=BANK0,space=1
   303                           global __pcstackBANK0
   304  0020                     __pcstackBANK0:
   305                           	global	?_DelayMs
   306  0020                     ?_DelayMs:	; 0 bytes @ 0x0
   307                           	global	?_Lcd_Write
   308  0020                     ?_Lcd_Write:	; 0 bytes @ 0x0
   309                           	global	??_SendByteSerially
   310  0020                     ??_SendByteSerially:	; 0 bytes @ 0x0
   311                           	global	?___aldiv
   312  0020                     ?___aldiv:	; 4 bytes @ 0x0
   313                           	global	Lcd_Write@c
   314  0020                     Lcd_Write@c:	; 1 bytes @ 0x0
   315                           	global	SendByteSerially@Byte
   316  0020                     SendByteSerially@Byte:	; 1 bytes @ 0x0
   317                           	global	DelayMs@cnt
   318  0020                     DelayMs@cnt:	; 2 bytes @ 0x0
   319                           	global	___aldiv@divisor
   320  0020                     ___aldiv@divisor:	; 4 bytes @ 0x0
   321  0020                     	ds	1
   322                           	global	??_Lcd_Write
   323  0021                     ??_Lcd_Write:	; 0 bytes @ 0x1
   324                           	global	??_SendStringSerially
   325  0021                     ??_SendStringSerially:	; 0 bytes @ 0x1
   326  0021                     	ds	1
   327                           	global	??_DelayMs
   328  0022                     ??_DelayMs:	; 0 bytes @ 0x2
   329                           	global	SendStringSerially@st
   330  0022                     SendStringSerially@st:	; 1 bytes @ 0x2
   331                           	global	DelayMs@_dcnt
   332  0022                     DelayMs@_dcnt:	; 2 bytes @ 0x2
   333  0022                     	ds	1
   334                           	global	Lcd_Write@_dcnt
   335  0023                     Lcd_Write@_dcnt:	; 2 bytes @ 0x3
   336  0023                     	ds	1
   337                           	global	??_SYSTEM_INIT
   338  0024                     ??_SYSTEM_INIT:	; 0 bytes @ 0x4
   339                           	global	___aldiv@dividend
   340  0024                     ___aldiv@dividend:	; 4 bytes @ 0x4
   341  0024                     	ds	1
   342                           	global	Lcd_Write@_dcnt_1579
   343  0025                     Lcd_Write@_dcnt_1579:	; 2 bytes @ 0x5
   344  0025                     	ds	2
   345                           	global	Lcd_Write@rs
   346  0027                     Lcd_Write@rs:	; 1 bytes @ 0x7
   347  0027                     	ds	1
   348                           	global	??_Lcd_String
   349  0028                     ??_Lcd_String:	; 0 bytes @ 0x8
   350                           	global	??_LCD_INIT
   351  0028                     ??_LCD_INIT:	; 0 bytes @ 0x8
   352                           	global	??___aldiv
   353  0028                     ??___aldiv:	; 0 bytes @ 0x8
   354  0028                     	ds	1
   355                           	global	Lcd_String@s
   356  0029                     Lcd_String@s:	; 1 bytes @ 0x9
   357                           	global	___aldiv@counter
   358  0029                     ___aldiv@counter:	; 1 bytes @ 0x9
   359                           	global	LCD_INIT@_dcnt
   360  0029                     LCD_INIT@_dcnt:	; 2 bytes @ 0x9
   361  0029                     	ds	1
   362                           	global	___aldiv@sign
   363  002A                     ___aldiv@sign:	; 1 bytes @ 0xA
   364  002A                     	ds	1
   365                           	global	___aldiv@quotient
   366  002B                     ___aldiv@quotient:	; 4 bytes @ 0xB
   367  002B                     	ds	4
   368                           	global	?_UART_INIT
   369  002F                     ?_UART_INIT:	; 0 bytes @ 0xF
   370                           	global	UART_INIT@baudrate
   371  002F                     UART_INIT@baudrate:	; 4 bytes @ 0xF
   372  002F                     	ds	4
   373                           	global	??_UART_INIT
   374  0033                     ??_UART_INIT:	; 0 bytes @ 0x13
   375  0033                     	ds	4
   376                           	global	??_main
   377  0037                     ??_main:	; 0 bytes @ 0x17
   378 ;;Data sizes: Strings 23, constant 0, data 10, bss 0, persistent 0 stack 0
   379 ;;Auto spaces:   Size  Autos    Used
   380 ;; COMMON          14     14      14
   381 ;; BANK0           80     23      33
   382 ;; BANK1           80      0       0
   383 ;; BANK2           80      0       0
   384                           
   385 ;;
   386 ;; Pointer list with targets:
   387                           
   388 ;; ?___aldiv	long  size(1) Largest target is 0
   389 ;;
   390 ;; ?_Lcd_Data	int  size(1) Largest target is 0
   391 ;;
   392 ;; SendStringSerially@st	PTR const unsigned char  size(1) Largest target is 8
   393 ;;		 -> STR_2(CODE[8]), 
   394 ;;
   395 ;; Lcd_String@s	PTR const unsigned char  size(1) Largest target is 15
   396 ;;		 -> STR_1(CODE[15]), 
   397 ;;
   398                           
   399                           
   400 ;;
   401 ;; Critical Paths under _main in COMMON
   402 ;;
   403 ;;   None.
   404 ;;
   405 ;; Critical Paths under _ISR in COMMON
   406 ;;
   407 ;;   _ISR->_Lcd_Char
   408 ;;   _Lcd_Char->i1_Lcd_Write
   409 ;;
   410 ;; Critical Paths under _main in BANK0
   411 ;;
   412 ;;   _main->_UART_INIT
   413 ;;   _SYSTEM_INIT->_DelayMs
   414 ;;   _SendStringSerially->_SendByteSerially
   415 ;;   _UART_INIT->___aldiv
   416 ;;   _LCD_INIT->_Lcd_Write
   417 ;;   _Lcd_String->_Lcd_Write
   418 ;;
   419 ;; Critical Paths under _ISR in BANK0
   420 ;;
   421 ;;   None.
   422 ;;
   423 ;; Critical Paths under _main in BANK1
   424 ;;
   425 ;;   None.
   426 ;;
   427 ;; Critical Paths under _ISR in BANK1
   428 ;;
   429 ;;   None.
   430 ;;
   431 ;; Critical Paths under _main in BANK2
   432 ;;
   433 ;;   None.
   434 ;;
   435 ;; Critical Paths under _ISR in BANK2
   436 ;;
   437 ;;   None.
   438                           
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442                           
   443 ;;
   444 ;;Call Graph Tables:
   445 ;;
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (0) _main                                                 0     0      0     995
   450 ;;                        _SYSTEM_INIT
   451 ;;                           _LCD_INIT
   452 ;;                          _UART_INIT
   453 ;;                            _DelayMs
   454 ;;                         _Lcd_String
   455 ;;                          _Lcd_Write
   456 ;;                 _SendStringSerially
   457 ;; ---------------------------------------------------------------------------------
   458 ;; (1) _SYSTEM_INIT                                          0     0      0      45
   459 ;;                            _DelayMs
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (1) _SendStringSerially                                   2     2      0      67
   462 ;;                                              1 BANK0      2     2      0
   463 ;;                   _SendByteSerially
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (1) _UART_INIT                                            8     4      4     322
   466 ;;                                             15 BANK0      8     4      4
   467 ;;                            ___aldiv
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (1) _LCD_INIT                                             3     3      0     180
   470 ;;                                              8 BANK0      3     3      0
   471 ;;                            _DelayMs
   472 ;;                          _Lcd_Write
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (1) _Lcd_String                                           2     2      0     224
   475 ;;                                              8 BANK0      2     2      0
   476 ;;                          _Lcd_Write
   477 ;;                            _DelayMs
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (2) ___aldiv                                             15     7      8     300
   480 ;;                                              0 BANK0     15     7      8
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _SendByteSerially                                     1     1      0      22
   483 ;;                                              0 BANK0      1     1      0
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (1) _Lcd_Write                                            8     7      1     112
   486 ;;                                              0 BANK0      8     7      1
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (2) _DelayMs                                              4     2      2      45
   489 ;;                                              0 BANK0      4     2      2
   490 ;; ---------------------------------------------------------------------------------
   491 ;; Estimated maximum stack depth 2
   492 ;; ---------------------------------------------------------------------------------
   493 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (3) _ISR                                                  4     4      0     391
   496 ;;                                             10 COMMON     4     4      0
   497 ;;                           _Lcd_Char
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (4) _Lcd_Char                                             2     2      0     391
   500 ;;                                              8 COMMON     2     2      0
   501 ;;                        i1_Lcd_Write
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (5) i1_Lcd_Write                                          8     7      1     369
   504 ;;                                              0 COMMON     8     7      1
   505 ;; ---------------------------------------------------------------------------------
   506 ;; Estimated maximum stack depth 5
   507 ;; ---------------------------------------------------------------------------------
   508                           
   509 ;; Call Graph Graphs:
   510                           
   511 ;; _main (ROOT)
   512 ;;   _SYSTEM_INIT
   513 ;;     _DelayMs
   514 ;;   _LCD_INIT
   515 ;;     _DelayMs
   516 ;;     _Lcd_Write
   517 ;;   _UART_INIT
   518 ;;     ___aldiv
   519 ;;   _DelayMs
   520 ;;   _Lcd_String
   521 ;;     _Lcd_Write
   522 ;;     _DelayMs
   523 ;;   _Lcd_Write
   524 ;;   _SendStringSerially
   525 ;;     _SendByteSerially
   526 ;;
   527 ;; _ISR (ROOT)
   528 ;;   _Lcd_Char
   529 ;;     i1_Lcd_Write
   530 ;;
   531                           
   532 ;; Address spaces:
   533                           
   534 ;;Name               Size   Autos  Total    Cost      Usage
   535 ;;SFR3                 0      0       0       4        0.0%
   536 ;;BITSFR3              0      0       0       4        0.0%
   537 ;;BANK2               50      0       0       7        0.0%
   538 ;;BITBANK2            50      0       0       6        0.0%
   539 ;;SFR2                 0      0       0       5        0.0%
   540 ;;BITSFR2              0      0       0       5        0.0%
   541 ;;SFR1                 0      0       0       2        0.0%
   542 ;;BITSFR1              0      0       0       2        0.0%
   543 ;;BANK1               50      0       0       5        0.0%
   544 ;;BITBANK1            50      0       0       4        0.0%
   545 ;;CODE                 0      0       0       0        0.0%
   546 ;;DATA                 0      0      37      10        0.0%
   547 ;;ABS                  0      0      2F       8        0.0%
   548 ;;NULL                 0      0       0       0        0.0%
   549 ;;STACK                0      0       8       2        0.0%
   550 ;;BANK0               50     17      21       3       41.3%
   551 ;;BITBANK0            50      0       0       9        0.0%
   552 ;;SFR0                 0      0       0       1        0.0%
   553 ;;BITSFR0              0      0       0       1        0.0%
   554 ;;COMMON               E      E       E       1      100.0%
   555 ;;BITCOMMON            E      0       0       0        0.0%
   556 ;;EEDATA             100      0       0       0        0.0%
   557                           
   558                           	global	_main
   559                           psect	maintext,global,class=CODE,delta=2
   560                           global __pmaintext
   561  0204                     __pmaintext:
   562                           
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 57 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 17F/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   579 ;;      Params:         0       0       0       0
   580 ;;      Locals:         0       0       0       0
   581 ;;      Temps:          0       0       0       0
   582 ;;      Totals:         0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels required when called:    5
   585 ;; This function calls:
   586 ;;		_SYSTEM_INIT
   587 ;;		_LCD_INIT
   588 ;;		_UART_INIT
   589 ;;		_DelayMs
   590 ;;		_Lcd_String
   591 ;;		_Lcd_Write
   592 ;;		_SendStringSerially
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           psect	maintext
   598                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
   599                           	line	57
   600                           	global	__size_of_main
   601  004C                     	__size_of_main	equ	__end_of_main-_main
   602                           	
   603  0204                     _main:	
   604                           	opt	stack 3
   605                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   606                           	line	58
   607                           	
   608  0204                     l3705:	
   609                           ;main.c: 58: SYSTEM_INIT();
   610  0204  118A  231D  118A   	fcall	_SYSTEM_INIT
   611                           	line	59
   612                           ;main.c: 59: LCD_INIT();
   613  0207  118A  20BB  118A   	fcall	_LCD_INIT
   614                           	line	60
   615                           ;main.c: 60: UART_INIT(9600);
   616  020A  3000               	movlw	0
   617  020B  1283               	bcf	status, 5	;RP0=0, select bank0
   618  020C  1303               	bcf	status, 6	;RP1=0, select bank0
   619  020D  00B2               	movwf	(?_UART_INIT+3)
   620  020E  3000               	movlw	0
   621  020F  00B1               	movwf	(?_UART_INIT+2)
   622  0210  3025               	movlw	025h
   623  0211  00B0               	movwf	(?_UART_INIT+1)
   624  0212  3080               	movlw	080h
   625  0213  00AF               	movwf	(?_UART_INIT)
   626                           
   627  0214  118A  2250  118A   	fcall	_UART_INIT
   628                           	line	61
   629                           ;main.c: 61: DelayMs(1000);
   630  0217  30E8               	movlw	low(03E8h)
   631  0218  1283               	bcf	status, 5	;RP0=0, select bank0
   632  0219  1303               	bcf	status, 6	;RP1=0, select bank0
   633  021A  00A0               	movwf	(?_DelayMs)
   634  021B  3003               	movlw	high(03E8h)
   635  021C  00A1               	movwf	((?_DelayMs))+1
   636  021D  118A  228A  118A   	fcall	_DelayMs
   637                           	line	62
   638                           	
   639  0220                     l3707:	
   640                           ;main.c: 62: Lcd_String("PICCIRCUIT.COM");
   641  0220  3001               	movlw	((STR_1-__stringbase))&0ffh
   642  0221  118A  2116  118A   	fcall	_Lcd_String
   643                           	line	63
   644                           	
   645  0224                     l3709:	
   646                           ;main.c: 63: DelayMs(500);
   647  0224  30F4               	movlw	low(01F4h)
   648  0225  1283               	bcf	status, 5	;RP0=0, select bank0
   649  0226  1303               	bcf	status, 6	;RP1=0, select bank0
   650  0227  00A0               	movwf	(?_DelayMs)
   651  0228  3001               	movlw	high(01F4h)
   652  0229  00A1               	movwf	((?_DelayMs))+1
   653  022A  118A  228A  118A   	fcall	_DelayMs
   654                           	line	64
   655                           	
   656  022D                     l3711:	
   657                           ;main.c: 64: (Lcd_Write( 0, 0X01),DelayMs(2));
   658  022D  1283               	bcf	status, 5	;RP0=0, select bank0
   659  022E  1303               	bcf	status, 6	;RP1=0, select bank0
   660  022F  01A0               	clrf	(?_Lcd_Write)
   661  0230  1403               	bsf	status,0
   662  0231  0DA0               	rlf	(?_Lcd_Write),f
   663  0232  3000               	movlw	(0)
   664  0233  118A  2168  118A   	fcall	_Lcd_Write
   665                           	
   666  0236                     l3713:	
   667  0236  3002               	movlw	low(02h)
   668  0237  1283               	bcf	status, 5	;RP0=0, select bank0
   669  0238  1303               	bcf	status, 6	;RP1=0, select bank0
   670  0239  00A0               	movwf	(?_DelayMs)
   671  023A  3000               	movlw	high(02h)
   672  023B  00A1               	movwf	((?_DelayMs))+1
   673  023C  118A  228A  118A   	fcall	_DelayMs
   674                           	line	65
   675                           ;main.c: 65: while(1)
   676                           	
   677  023F                     l979:	
   678                           	line	67
   679                           ;main.c: 66: {
   680                           ;main.c: 67: SendStringSerially("Welcome");
   681  023F  3010               	movlw	((STR_2-__stringbase))&0ffh
   682  0240  118A  22D0  118A   	fcall	_SendStringSerially
   683                           	line	68
   684                           	
   685  0243                     l3715:	
   686                           ;main.c: 68: DelayMs(50);
   687  0243  3032               	movlw	low(032h)
   688  0244  1283               	bcf	status, 5	;RP0=0, select bank0
   689  0245  1303               	bcf	status, 6	;RP1=0, select bank0
   690  0246  00A0               	movwf	(?_DelayMs)
   691  0247  3000               	movlw	high(032h)
   692  0248  00A1               	movwf	((?_DelayMs))+1
   693  0249  118A  228A  118A   	fcall	_DelayMs
   694  024C  2A3F               	goto	l979
   695                           	line	69
   696                           	
   697  024D                     l980:	
   698                           	line	65
   699  024D  2A3F               	goto	l979
   700                           	
   701  024E                     l981:	
   702                           	line	70
   703                           	
   704  024E                     l982:	
   705                           	global	start
   706  024E  118A  2811         	ljmp	start
   707                           	opt stack 0
   708                           GLOBAL	__end_of_main
   709  0250                     	__end_of_main:
   710 ;; =============== function _main ends ============
   711                           
   712                           	signat	_main,88
   713                           	global	_SYSTEM_INIT
   714                           psect	text328,local,class=CODE,delta=2
   715                           global __ptext328
   716  031D                     __ptext328:
   717                           
   718 ;; *************** function _SYSTEM_INIT *****************
   719 ;; Defined at:
   720 ;;		line 33 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   734 ;;      Params:         0       0       0       0
   735 ;;      Locals:         0       0       0       0
   736 ;;      Temps:          0       0       0       0
   737 ;;      Totals:         0       0       0       0
   738 ;;Total ram usage:        0 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    4
   741 ;; This function calls:
   742 ;;		_DelayMs
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           psect	text328
   748                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
   749                           	line	33
   750                           	global	__size_of_SYSTEM_INIT
   751  001A                     	__size_of_SYSTEM_INIT	equ	__end_of_SYSTEM_INIT-_SYSTEM_INIT
   752                           	
   753  031D                     _SYSTEM_INIT:	
   754                           	opt	stack 3
   755                           ; Regs used in _SYSTEM_INIT: [wreg+status,2+status,0+pclath+cstack]
   756                           	line	34
   757                           	
   758  031D                     l3695:	
   759                           ;main.c: 34: IRCF2 = 1;
   760  031D  1683               	bsf	status, 5	;RP0=1, select bank1
   761  031E  1303               	bcf	status, 6	;RP1=0, select bank1
   762  031F  170F               	bsf	(1150/8)^080h,(1150)&7
   763                           	line	35
   764                           ;main.c: 35: IRCF1 = 1;
   765  0320  168F               	bsf	(1149/8)^080h,(1149)&7
   766                           	line	36
   767                           ;main.c: 36: IRCF0 = 1;
   768  0321  160F               	bsf	(1148/8)^080h,(1148)&7
   769                           	line	38
   770                           	
   771  0322                     l3697:	
   772                           ;main.c: 38: ANSEL = 0x00;
   773  0322  1283               	bcf	status, 5	;RP0=0, select bank2
   774  0323  1703               	bsf	status, 6	;RP1=1, select bank2
   775  0324  019E               	clrf	(286)^0100h	;volatile
   776                           	line	39
   777                           ;main.c: 39: ANSELH = 0x00;
   778  0325  019F               	clrf	(287)^0100h	;volatile
   779                           	line	41
   780                           ;main.c: 41: TRISA = 0b00000000;
   781  0326  1683               	bsf	status, 5	;RP0=1, select bank1
   782  0327  1303               	bcf	status, 6	;RP1=0, select bank1
   783  0328  0185               	clrf	(133)^080h	;volatile
   784                           	line	42
   785                           ;main.c: 42: TRISC = 0b00000000;
   786  0329  0187               	clrf	(135)^080h	;volatile
   787                           	line	44
   788                           	
   789  032A                     l3699:	
   790                           ;main.c: 44: WPUA2 = 1;
   791  032A  1515               	bsf	(1194/8)^080h,(1194)&7
   792                           	line	45
   793                           	
   794  032B                     l3701:	
   795                           ;main.c: 45: nRABPU = 0;
   796  032B  1381               	bcf	(1039/8)^080h,(1039)&7
   797                           	line	47
   798                           ;main.c: 47: PORTC = 0;
   799  032C  1283               	bcf	status, 5	;RP0=0, select bank0
   800  032D  1303               	bcf	status, 6	;RP1=0, select bank0
   801  032E  0187               	clrf	(7)	;volatile
   802                           	line	49
   803                           	
   804  032F                     l3703:	
   805                           ;main.c: 49: DelayMs(100);
   806  032F  3064               	movlw	low(064h)
   807  0330  00A0               	movwf	(?_DelayMs)
   808  0331  3000               	movlw	high(064h)
   809  0332  00A1               	movwf	((?_DelayMs))+1
   810  0333  118A  228A  118A   	fcall	_DelayMs
   811                           	line	50
   812                           	
   813  0336                     l976:	
   814  0336  0008               	return
   815                           	opt stack 0
   816                           GLOBAL	__end_of_SYSTEM_INIT
   817  0337                     	__end_of_SYSTEM_INIT:
   818 ;; =============== function _SYSTEM_INIT ends ============
   819                           
   820                           	signat	_SYSTEM_INIT,88
   821                           	global	_SendStringSerially
   822                           psect	text329,local,class=CODE,delta=2
   823                           global __ptext329
   824  02D0                     __ptext329:
   825                           
   826 ;; *************** function _SendStringSerially *****************
   827 ;; Defined at:
   828 ;;		line 24 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  st              1    wreg     PTR const unsigned char 
   831 ;;		 -> STR_2(8), 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  st              1    2[BANK0 ] PTR const unsigned char 
   834 ;;		 -> STR_2(8), 
   835 ;; Return value:  Size  Location     Type
   836 ;;		None               void
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   844 ;;      Params:         0       0       0       0
   845 ;;      Locals:         0       1       0       0
   846 ;;      Temps:          0       1       0       0
   847 ;;      Totals:         0       2       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    4
   851 ;; This function calls:
   852 ;;		_SendByteSerially
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           psect	text329
   858                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
   859                           	line	24
   860                           	global	__size_of_SendStringSerially
   861  001F                     	__size_of_SendStringSerially	equ	__end_of_SendStringSerially-_SendStringSerially
   862                           	
   863  02D0                     _SendStringSerially:	
   864                           	opt	stack 3
   865                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   866                           ;SendStringSerially@st stored from wreg
   867  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
   868  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
   869  02D2  00A2               	movwf	(SendStringSerially@st)
   870                           	line	25
   871                           	
   872  02D3                     l3687:	
   873                           ;uart.h: 25: while(*st)
   874  02D3  2AE3               	goto	l3693
   875                           	
   876  02D4                     l953:	
   877                           	line	26
   878                           	
   879  02D4                     l3689:	
   880                           ;uart.h: 26: SendByteSerially(*st++);
   881  02D4  0822               	movf	(SendStringSerially@st),w
   882  02D5  0084               	movwf	fsr0
   883  02D6  118A  2300  118A   	fcall	stringdir
   884  02D9  118A  2357  118A   	fcall	_SendByteSerially
   885                           	
   886  02DC                     l3691:	
   887  02DC  3001               	movlw	(01h)
   888  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
   889  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
   890  02DF  00A1               	movwf	(??_SendStringSerially+0)+0
   891  02E0  0821               	movf	(??_SendStringSerially+0)+0,w
   892  02E1  07A2               	addwf	(SendStringSerially@st),f
   893  02E2  2AE3               	goto	l3693
   894                           	
   895  02E3                     l952:	
   896                           	line	25
   897                           	
   898  02E3                     l3693:	
   899  02E3  0822               	movf	(SendStringSerially@st),w
   900  02E4  0084               	movwf	fsr0
   901  02E5  118A  2300  118A   	fcall	stringdir
   902  02E8  3800               	iorlw	0
   903  02E9  1D03               	skipz
   904  02EA  2AEC               	goto	u3111
   905  02EB  2AED               	goto	u3110
   906  02EC                     u3111:
   907  02EC  2AD4               	goto	l3689
   908  02ED                     u3110:
   909  02ED  2AEE               	goto	l955
   910                           	
   911  02EE                     l954:	
   912                           	line	27
   913                           	
   914  02EE                     l955:	
   915  02EE  0008               	return
   916                           	opt stack 0
   917                           GLOBAL	__end_of_SendStringSerially
   918  02EF                     	__end_of_SendStringSerially:
   919 ;; =============== function _SendStringSerially ends ============
   920                           
   921                           	signat	_SendStringSerially,4216
   922                           	global	_UART_INIT
   923                           psect	text330,local,class=CODE,delta=2
   924                           global __ptext330
   925  0250                     __ptext330:
   926                           
   927 ;; *************** function _UART_INIT *****************
   928 ;; Defined at:
   929 ;;		line 2 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  baudrate        4   15[BANK0 ] const long 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   943 ;;      Params:         0       4       0       0
   944 ;;      Locals:         0       0       0       0
   945 ;;      Temps:          0       4       0       0
   946 ;;      Totals:         0       8       0       0
   947 ;;Total ram usage:        8 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    4
   950 ;; This function calls:
   951 ;;		___aldiv
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           psect	text330
   957                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
   958                           	line	2
   959                           	global	__size_of_UART_INIT
   960  003A                     	__size_of_UART_INIT	equ	__end_of_UART_INIT-_UART_INIT
   961                           	
   962  0250                     _UART_INIT:	
   963                           	opt	stack 3
   964                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
   965                           	line	3
   966                           	
   967  0250                     l3669:	
   968                           ;uart.h: 3: SPBRG = ((8000000)/(baudrate*16))-1;
   969  0250  1283               	bcf	status, 5	;RP0=0, select bank0
   970  0251  1303               	bcf	status, 6	;RP1=0, select bank0
   971  0252  082F               	movf	(UART_INIT@baudrate),w
   972  0253  00B3               	movwf	(??_UART_INIT+0)+0
   973  0254  0830               	movf	(UART_INIT@baudrate+1),w
   974  0255  00B4               	movwf	((??_UART_INIT+0)+0+1)
   975  0256  0831               	movf	(UART_INIT@baudrate+2),w
   976  0257  00B5               	movwf	((??_UART_INIT+0)+0+2)
   977  0258  0832               	movf	(UART_INIT@baudrate+3),w
   978  0259  00B6               	movwf	((??_UART_INIT+0)+0+3)
   979  025A  3004               	movlw	04h
   980  025B                     u3105:
   981  025B  1003               	clrc
   982  025C  0DB3               	rlf	(??_UART_INIT+0)+0,f
   983  025D  0DB4               	rlf	(??_UART_INIT+0)+1,f
   984  025E  0DB5               	rlf	(??_UART_INIT+0)+2,f
   985  025F  0DB6               	rlf	(??_UART_INIT+0)+3,f
   986  0260                     u3100:
   987  0260  3EFF               	addlw	-1
   988  0261  1D03               	skipz
   989  0262  2A5B               	goto	u3105
   990  0263  0836               	movf	3+(??_UART_INIT+0)+0,w
   991  0264  00A3               	movwf	(?___aldiv+3)
   992  0265  0835               	movf	2+(??_UART_INIT+0)+0,w
   993  0266  00A2               	movwf	(?___aldiv+2)
   994  0267  0834               	movf	1+(??_UART_INIT+0)+0,w
   995  0268  00A1               	movwf	(?___aldiv+1)
   996  0269  0833               	movf	0+(??_UART_INIT+0)+0,w
   997  026A  00A0               	movwf	(?___aldiv)
   998                           
   999  026B  3000               	movlw	0
  1000  026C  00A7               	movwf	3+(?___aldiv)+04h
  1001  026D  307A               	movlw	07Ah
  1002  026E  00A6               	movwf	2+(?___aldiv)+04h
  1003  026F  3012               	movlw	012h
  1004  0270  00A5               	movwf	1+(?___aldiv)+04h
  1005  0271  3000               	movlw	0
  1006  0272  00A4               	movwf	0+(?___aldiv)+04h
  1007                           
  1008  0273  118A  2013  118A   	fcall	___aldiv
  1009  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  1010  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  1011  0278  0820               	movf	0+(((0+(?___aldiv)))),w
  1012  0279  3EFF               	addlw	0FFh
  1013  027A  1683               	bsf	status, 5	;RP0=1, select bank1
  1014  027B  1303               	bcf	status, 6	;RP1=0, select bank1
  1015  027C  0099               	movwf	(153)^080h	;volatile
  1016                           	line	5
  1017                           	
  1018  027D                     l3671:	
  1019                           ;uart.h: 5: BRGH = 1;
  1020  027D  1518               	bsf	(1218/8)^080h,(1218)&7
  1021                           	line	6
  1022                           	
  1023  027E                     l3673:	
  1024                           ;uart.h: 6: SYNC = 0;
  1025  027E  1218               	bcf	(1220/8)^080h,(1220)&7
  1026                           	line	7
  1027                           	
  1028  027F                     l3675:	
  1029                           ;uart.h: 7: SPEN = 1;
  1030  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  1031  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  1032  0281  1798               	bsf	(199/8),(199)&7
  1033                           	line	9
  1034                           	
  1035  0282                     l3677:	
  1036                           ;uart.h: 9: CREN = 1;
  1037  0282  1618               	bsf	(196/8),(196)&7
  1038                           	line	10
  1039                           	
  1040  0283                     l3679:	
  1041                           ;uart.h: 10: TXEN = 1;
  1042  0283  1683               	bsf	status, 5	;RP0=1, select bank1
  1043  0284  1303               	bcf	status, 6	;RP1=0, select bank1
  1044  0285  1698               	bsf	(1221/8)^080h,(1221)&7
  1045                           	line	12
  1046                           	
  1047  0286                     l3681:	
  1048                           ;uart.h: 12: GIE = 1;
  1049  0286  178B               	bsf	(95/8),(95)&7
  1050                           	line	13
  1051                           	
  1052  0287                     l3683:	
  1053                           ;uart.h: 13: PEIE = 1;
  1054  0287  170B               	bsf	(94/8),(94)&7
  1055                           	line	14
  1056                           	
  1057  0288                     l3685:	
  1058                           ;uart.h: 14: RCIE = 1;
  1059  0288  168C               	bsf	(1125/8)^080h,(1125)&7
  1060                           	line	15
  1061                           	
  1062  0289                     l943:	
  1063  0289  0008               	return
  1064                           	opt stack 0
  1065                           GLOBAL	__end_of_UART_INIT
  1066  028A                     	__end_of_UART_INIT:
  1067 ;; =============== function _UART_INIT ends ============
  1068                           
  1069                           	signat	_UART_INIT,4216
  1070                           	global	_LCD_INIT
  1071                           psect	text331,local,class=CODE,delta=2
  1072                           global __ptext331
  1073  00BB                     __ptext331:
  1074                           
  1075 ;; *************** function _LCD_INIT *****************
  1076 ;; Defined at:
  1077 ;;		line 60 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  _dcnt           2    9[BANK0 ] unsigned int 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1091 ;;      Params:         0       0       0       0
  1092 ;;      Locals:         0       2       0       0
  1093 ;;      Temps:          0       1       0       0
  1094 ;;      Totals:         0       3       0       0
  1095 ;;Total ram usage:        3 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    4
  1098 ;; This function calls:
  1099 ;;		_DelayMs
  1100 ;;		_Lcd_Write
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           psect	text331
  1106                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1107                           	line	60
  1108                           	global	__size_of_LCD_INIT
  1109  005B                     	__size_of_LCD_INIT	equ	__end_of_LCD_INIT-_LCD_INIT
  1110                           	
  1111  00BB                     _LCD_INIT:	
  1112                           	opt	stack 3
  1113                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  1114                           	line	61
  1115                           	
  1116  00BB                     l3639:	
  1117                           ;lcd.h: 61: RA4 = 0;
  1118  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1119  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1120  00BD  1205               	bcf	(44/8),(44)&7
  1121                           	line	62
  1122                           ;lcd.h: 62: RA5 = 0;
  1123  00BE  1285               	bcf	(45/8),(45)&7
  1124                           	line	64
  1125                           	
  1126  00BF                     l3641:	
  1127                           ;lcd.h: 64: DelayMs(50);
  1128  00BF  3032               	movlw	low(032h)
  1129  00C0  00A0               	movwf	(?_DelayMs)
  1130  00C1  3000               	movlw	high(032h)
  1131  00C2  00A1               	movwf	((?_DelayMs))+1
  1132  00C3  118A  228A  118A   	fcall	_DelayMs
  1133                           	line	65
  1134                           	
  1135  00C6                     l3643:	
  1136                           ;lcd.h: 65: PORTC= (PORTC & 0x0F) | ( ( 0x3 << 4 ) & 0xF0 );
  1137  00C6  1283               	bcf	status, 5	;RP0=0, select bank0
  1138  00C7  1303               	bcf	status, 6	;RP1=0, select bank0
  1139  00C8  0807               	movf	(7),w
  1140  00C9  390F               	andlw	0Fh
  1141  00CA  3830               	iorlw	030h
  1142  00CB  0087               	movwf	(7)	;volatile
  1143                           	line	66
  1144                           	
  1145  00CC                     l3645:	
  1146                           ;lcd.h: 66: ((RA5 = 1),(RA5=0));
  1147  00CC  1685               	bsf	(45/8),(45)&7
  1148                           	
  1149  00CD                     l3647:	
  1150  00CD  1285               	bcf	(45/8),(45)&7
  1151                           	line	67
  1152                           	
  1153  00CE                     l3649:	
  1154                           ;lcd.h: 67: { unsigned int _dcnt; _dcnt = (200)/7.5; while(--_dcnt != 0) continue; };
  1155  00CE  301A               	movlw	low(01Ah)
  1156  00CF  00A9               	movwf	(LCD_INIT@_dcnt)
  1157  00D0  3000               	movlw	high(01Ah)
  1158  00D1  00AA               	movwf	((LCD_INIT@_dcnt))+1
  1159  00D2  28D4               	goto	l3651
  1160                           	
  1161  00D3                     l929:	
  1162  00D3  28D4               	goto	l3651
  1163                           	
  1164  00D4                     l928:	
  1165                           	
  1166  00D4                     l3651:	
  1167  00D4  3001               	movlw	low(01h)
  1168  00D5  02A9               	subwf	(LCD_INIT@_dcnt),f
  1169  00D6  3000               	movlw	high(01h)
  1170  00D7  1C03               	skipc
  1171  00D8  03AA               	decf	(LCD_INIT@_dcnt+1),f
  1172  00D9  02AA               	subwf	(LCD_INIT@_dcnt+1),f
  1173  00DA  082A               	movf	(((LCD_INIT@_dcnt+1))),w
  1174  00DB  0429               	iorwf	(((LCD_INIT@_dcnt))),w
  1175  00DC  1D03               	skipz
  1176  00DD  28DF               	goto	u3091
  1177  00DE  28E0               	goto	u3090
  1178  00DF                     u3091:
  1179  00DF  28D4               	goto	l3651
  1180  00E0                     u3090:
  1181  00E0  28E1               	goto	l3653
  1182                           	
  1183  00E1                     l930:	
  1184                           	line	68
  1185                           	
  1186  00E1                     l3653:	
  1187                           ;lcd.h: 68: PORTC = (PORTC & 0x0F) | ( ( 0x2 << 4 ) & 0xF0 );
  1188  00E1  0807               	movf	(7),w
  1189  00E2  390F               	andlw	0Fh
  1190  00E3  3820               	iorlw	020h
  1191  00E4  0087               	movwf	(7)	;volatile
  1192                           	line	69
  1193                           	
  1194  00E5                     l3655:	
  1195                           ;lcd.h: 69: ((RA5 = 1),(RA5=0));
  1196  00E5  1685               	bsf	(45/8),(45)&7
  1197                           	
  1198  00E6                     l3657:	
  1199  00E6  1285               	bcf	(45/8),(45)&7
  1200                           	line	71
  1201                           	
  1202  00E7                     l3659:	
  1203                           ;lcd.h: 71: Lcd_Write( 0, 0x28);
  1204  00E7  3028               	movlw	(028h)
  1205  00E8  00A8               	movwf	(??_LCD_INIT+0)+0
  1206  00E9  0828               	movf	(??_LCD_INIT+0)+0,w
  1207  00EA  00A0               	movwf	(?_Lcd_Write)
  1208  00EB  3000               	movlw	(0)
  1209  00EC  118A  2168  118A   	fcall	_Lcd_Write
  1210                           	line	72
  1211                           	
  1212  00EF                     l3661:	
  1213                           ;lcd.h: 72: Lcd_Write( 0, 0x0C);
  1214  00EF  300C               	movlw	(0Ch)
  1215  00F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1216  00F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1217  00F2  00A8               	movwf	(??_LCD_INIT+0)+0
  1218  00F3  0828               	movf	(??_LCD_INIT+0)+0,w
  1219  00F4  00A0               	movwf	(?_Lcd_Write)
  1220  00F5  3000               	movlw	(0)
  1221  00F6  118A  2168  118A   	fcall	_Lcd_Write
  1222                           	line	73
  1223                           	
  1224  00F9                     l3663:	
  1225                           ;lcd.h: 73: (Lcd_Write( 0, 0X01),DelayMs(2));
  1226  00F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1227  00FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1228  00FB  01A0               	clrf	(?_Lcd_Write)
  1229  00FC  1403               	bsf	status,0
  1230  00FD  0DA0               	rlf	(?_Lcd_Write),f
  1231  00FE  3000               	movlw	(0)
  1232  00FF  118A  2168  118A   	fcall	_Lcd_Write
  1233                           	
  1234  0102                     l3665:	
  1235  0102  3002               	movlw	low(02h)
  1236  0103  1283               	bcf	status, 5	;RP0=0, select bank0
  1237  0104  1303               	bcf	status, 6	;RP1=0, select bank0
  1238  0105  00A0               	movwf	(?_DelayMs)
  1239  0106  3000               	movlw	high(02h)
  1240  0107  00A1               	movwf	((?_DelayMs))+1
  1241  0108  118A  228A  118A   	fcall	_DelayMs
  1242                           	line	74
  1243                           	
  1244  010B                     l3667:	
  1245                           ;lcd.h: 74: Lcd_Write( 0, 0x06);
  1246  010B  3006               	movlw	(06h)
  1247  010C  1283               	bcf	status, 5	;RP0=0, select bank0
  1248  010D  1303               	bcf	status, 6	;RP1=0, select bank0
  1249  010E  00A8               	movwf	(??_LCD_INIT+0)+0
  1250  010F  0828               	movf	(??_LCD_INIT+0)+0,w
  1251  0110  00A0               	movwf	(?_Lcd_Write)
  1252  0111  3000               	movlw	(0)
  1253  0112  118A  2168  118A   	fcall	_Lcd_Write
  1254                           	line	75
  1255                           	
  1256  0115                     l931:	
  1257  0115  0008               	return
  1258                           	opt stack 0
  1259                           GLOBAL	__end_of_LCD_INIT
  1260  0116                     	__end_of_LCD_INIT:
  1261 ;; =============== function _LCD_INIT ends ============
  1262                           
  1263                           	signat	_LCD_INIT,88
  1264                           	global	_Lcd_String
  1265                           psect	text332,local,class=CODE,delta=2
  1266                           global __ptext332
  1267  0116                     __ptext332:
  1268                           
  1269 ;; *************** function _Lcd_String *****************
  1270 ;; Defined at:
  1271 ;;		line 32 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  s               1    wreg     PTR const unsigned char 
  1274 ;;		 -> STR_1(15), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  1277 ;;		 -> STR_1(15), 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;		None               void
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1287 ;;      Params:         0       0       0       0
  1288 ;;      Locals:         0       1       0       0
  1289 ;;      Temps:          0       1       0       0
  1290 ;;      Totals:         0       2       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    4
  1294 ;; This function calls:
  1295 ;;		_Lcd_Write
  1296 ;;		_DelayMs
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           psect	text332
  1302                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1303                           	line	32
  1304                           	global	__size_of_Lcd_String
  1305  0052                     	__size_of_Lcd_String	equ	__end_of_Lcd_String-_Lcd_String
  1306                           	
  1307  0116                     _Lcd_String:	
  1308                           	opt	stack 3
  1309                           ; Regs used in _Lcd_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1310                           ;Lcd_String@s stored from wreg
  1311  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  1312  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  1313  0118  00A9               	movwf	(Lcd_String@s)
  1314                           	line	33
  1315                           	
  1316  0119                     l3623:	
  1317                           ;lcd.h: 33: while(*s)
  1318  0119  295A               	goto	l3637
  1319                           	
  1320  011A                     l912:	
  1321                           	line	35
  1322                           ;lcd.h: 34: {
  1323                           ;lcd.h: 35: switch (*s)
  1324  011A  294D               	goto	l3635
  1325                           	line	37
  1326                           ;lcd.h: 36: {
  1327                           ;lcd.h: 37: case '\c': Lcd_Write( 0, 0x01 );
  1328                           	
  1329  011B                     l914:	
  1330                           	
  1331  011B                     l3625:	
  1332  011B  01A0               	clrf	(?_Lcd_Write)
  1333  011C  1403               	bsf	status,0
  1334  011D  0DA0               	rlf	(?_Lcd_Write),f
  1335  011E  3000               	movlw	(0)
  1336  011F  118A  2168  118A   	fcall	_Lcd_Write
  1337                           	line	38
  1338                           ;lcd.h: 38: DelayMs(2);
  1339  0122  3002               	movlw	low(02h)
  1340  0123  1283               	bcf	status, 5	;RP0=0, select bank0
  1341  0124  1303               	bcf	status, 6	;RP1=0, select bank0
  1342  0125  00A0               	movwf	(?_DelayMs)
  1343  0126  3000               	movlw	high(02h)
  1344  0127  00A1               	movwf	((?_DelayMs))+1
  1345  0128  118A  228A  118A   	fcall	_DelayMs
  1346                           	line	39
  1347                           ;lcd.h: 39: break;
  1348  012B  295A               	goto	l3637
  1349                           	line	40
  1350                           ;lcd.h: 40: case '\n': Lcd_Write( 0, 0xC0 ); break;
  1351                           	
  1352  012C                     l916:	
  1353                           	
  1354  012C                     l3627:	
  1355  012C  30C0               	movlw	(0C0h)
  1356  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  1357  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  1358  012F  00A8               	movwf	(??_Lcd_String+0)+0
  1359  0130  0828               	movf	(??_Lcd_String+0)+0,w
  1360  0131  00A0               	movwf	(?_Lcd_Write)
  1361  0132  3000               	movlw	(0)
  1362  0133  118A  2168  118A   	fcall	_Lcd_Write
  1363  0136  295A               	goto	l3637
  1364                           	line	41
  1365                           ;lcd.h: 41: default : Lcd_Write( 1, *s++);
  1366                           	
  1367  0137                     l917:	
  1368                           	
  1369  0137                     l3629:	
  1370  0137  1283               	bcf	status, 5	;RP0=0, select bank0
  1371  0138  1303               	bcf	status, 6	;RP1=0, select bank0
  1372  0139  0829               	movf	(Lcd_String@s),w
  1373  013A  0084               	movwf	fsr0
  1374  013B  118A  2300  118A   	fcall	stringdir
  1375  013E  00A8               	movwf	(??_Lcd_String+0)+0
  1376  013F  0828               	movf	(??_Lcd_String+0)+0,w
  1377  0140  00A0               	movwf	(?_Lcd_Write)
  1378  0141  3001               	movlw	(01h)
  1379  0142  118A  2168  118A   	fcall	_Lcd_Write
  1380                           	
  1381  0145                     l3631:	
  1382  0145  3001               	movlw	(01h)
  1383  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  1384  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  1385  0148  00A8               	movwf	(??_Lcd_String+0)+0
  1386  0149  0828               	movf	(??_Lcd_String+0)+0,w
  1387  014A  07A9               	addwf	(Lcd_String@s),f
  1388                           	line	42
  1389                           ;lcd.h: 42: break;
  1390  014B  295A               	goto	l3637
  1391                           	line	43
  1392                           	
  1393  014C                     l3633:	
  1394                           ;lcd.h: 43: }
  1395  014C  295A               	goto	l3637
  1396                           	line	35
  1397                           	
  1398  014D                     l913:	
  1399                           	
  1400  014D                     l3635:	
  1401  014D  0829               	movf	(Lcd_String@s),w
  1402  014E  0084               	movwf	fsr0
  1403  014F  118A  2300  118A   	fcall	stringdir
  1404                           	; Switch size 1, requested type "space"
  1405                           ; Number of cases is 2, Range of values is 10 to 99
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte            7     4 (average)
  1409                           ; direct_byte          190    10 (fixed)
  1410                           ; jumptable            263     9 (fixed)
  1411                           ;	Chosen strategy is simple_byte
  1412                           
  1413                           	opt asmopt_off
  1414  0152  3A0A               	xorlw	10^0	; case 10
  1415  0153  1903               	skipnz
  1416  0154  292C               	goto	l3627
  1417  0155  3A69               	xorlw	99^10	; case 99
  1418  0156  1903               	skipnz
  1419  0157  291B               	goto	l3625
  1420  0158  2937               	goto	l3629
  1421                           	opt asmopt_on
  1422                           
  1423                           	line	43
  1424                           	
  1425  0159                     l915:	
  1426  0159  295A               	goto	l3637
  1427                           	line	44
  1428                           	
  1429  015A                     l911:	
  1430                           	line	33
  1431                           	
  1432  015A                     l3637:	
  1433  015A  1283               	bcf	status, 5	;RP0=0, select bank0
  1434  015B  1303               	bcf	status, 6	;RP1=0, select bank0
  1435  015C  0829               	movf	(Lcd_String@s),w
  1436  015D  0084               	movwf	fsr0
  1437  015E  118A  2300  118A   	fcall	stringdir
  1438  0161  3800               	iorlw	0
  1439  0162  1D03               	skipz
  1440  0163  2965               	goto	u3081
  1441  0164  2966               	goto	u3080
  1442  0165                     u3081:
  1443  0165  294D               	goto	l3635
  1444  0166                     u3080:
  1445  0166  2967               	goto	l919
  1446                           	
  1447  0167                     l918:	
  1448                           	line	45
  1449                           	
  1450  0167                     l919:	
  1451  0167  0008               	return
  1452                           	opt stack 0
  1453                           GLOBAL	__end_of_Lcd_String
  1454  0168                     	__end_of_Lcd_String:
  1455 ;; =============== function _Lcd_String ends ============
  1456                           
  1457                           	signat	_Lcd_String,4216
  1458                           	global	___aldiv
  1459                           psect	text333,local,class=CODE,delta=2
  1460                           global __ptext333
  1461  0013                     __ptext333:
  1462                           
  1463 ;; *************** function ___aldiv *****************
  1464 ;; Defined at:
  1465 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\aldiv.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  divisor         4    0[BANK0 ] long 
  1468 ;;  dividend        4    4[BANK0 ] long 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  quotient        4   11[BANK0 ] long 
  1471 ;;  sign            1   10[BANK0 ] unsigned char 
  1472 ;;  counter         1    9[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  4    0[BANK0 ] long 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1482 ;;      Params:         0       8       0       0
  1483 ;;      Locals:         0       6       0       0
  1484 ;;      Temps:          0       1       0       0
  1485 ;;      Totals:         0      15       0       0
  1486 ;;Total ram usage:       15 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    3
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_UART_INIT
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           psect	text333
  1496                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\aldiv.c"
  1497                           	line	5
  1498                           	global	__size_of___aldiv
  1499  00A8                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  1500                           	
  1501  0013                     ___aldiv:	
  1502                           	opt	stack 3
  1503                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1504                           	line	9
  1505                           	
  1506  0013                     l3561:	
  1507  0013  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0014  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  0015  01AA               	clrf	(___aldiv@sign)
  1510                           	line	10
  1511  0016  1FA3               	btfss	(___aldiv@divisor+3),7
  1512  0017  2819               	goto	u2931
  1513  0018  281A               	goto	u2930
  1514  0019                     u2931:
  1515  0019  2829               	goto	l3567
  1516  001A                     u2930:
  1517                           	line	11
  1518                           	
  1519  001A                     l3563:	
  1520  001A  09A0               	comf	(___aldiv@divisor),f
  1521  001B  09A1               	comf	(___aldiv@divisor+1),f
  1522  001C  09A2               	comf	(___aldiv@divisor+2),f
  1523  001D  09A3               	comf	(___aldiv@divisor+3),f
  1524  001E  0AA0               	incf	(___aldiv@divisor),f
  1525  001F  1903               	skipnz
  1526  0020  0AA1               	incf	(___aldiv@divisor+1),f
  1527  0021  1903               	skipnz
  1528  0022  0AA2               	incf	(___aldiv@divisor+2),f
  1529  0023  1903               	skipnz
  1530  0024  0AA3               	incf	(___aldiv@divisor+3),f
  1531                           	line	12
  1532                           	
  1533  0025                     l3565:	
  1534  0025  01AA               	clrf	(___aldiv@sign)
  1535  0026  1403               	bsf	status,0
  1536  0027  0DAA               	rlf	(___aldiv@sign),f
  1537  0028  2829               	goto	l3567
  1538                           	line	13
  1539                           	
  1540  0029                     l2036:	
  1541                           	line	14
  1542                           	
  1543  0029                     l3567:	
  1544  0029  1FA7               	btfss	(___aldiv@dividend+3),7
  1545  002A  282C               	goto	u2941
  1546  002B  282D               	goto	u2940
  1547  002C                     u2941:
  1548  002C  283D               	goto	l3573
  1549  002D                     u2940:
  1550                           	line	15
  1551                           	
  1552  002D                     l3569:	
  1553  002D  09A4               	comf	(___aldiv@dividend),f
  1554  002E  09A5               	comf	(___aldiv@dividend+1),f
  1555  002F  09A6               	comf	(___aldiv@dividend+2),f
  1556  0030  09A7               	comf	(___aldiv@dividend+3),f
  1557  0031  0AA4               	incf	(___aldiv@dividend),f
  1558  0032  1903               	skipnz
  1559  0033  0AA5               	incf	(___aldiv@dividend+1),f
  1560  0034  1903               	skipnz
  1561  0035  0AA6               	incf	(___aldiv@dividend+2),f
  1562  0036  1903               	skipnz
  1563  0037  0AA7               	incf	(___aldiv@dividend+3),f
  1564                           	line	16
  1565                           	
  1566  0038                     l3571:	
  1567  0038  3001               	movlw	(01h)
  1568  0039  00A8               	movwf	(??___aldiv+0)+0
  1569  003A  0828               	movf	(??___aldiv+0)+0,w
  1570  003B  06AA               	xorwf	(___aldiv@sign),f
  1571  003C  283D               	goto	l3573
  1572                           	line	17
  1573                           	
  1574  003D                     l2037:	
  1575                           	line	18
  1576                           	
  1577  003D                     l3573:	
  1578  003D  3000               	movlw	0
  1579  003E  00AE               	movwf	(___aldiv@quotient+3)
  1580  003F  3000               	movlw	0
  1581  0040  00AD               	movwf	(___aldiv@quotient+2)
  1582  0041  3000               	movlw	0
  1583  0042  00AC               	movwf	(___aldiv@quotient+1)
  1584  0043  3000               	movlw	0
  1585  0044  00AB               	movwf	(___aldiv@quotient)
  1586                           
  1587                           	line	19
  1588                           	
  1589  0045                     l3575:	
  1590  0045  0823               	movf	(___aldiv@divisor+3),w
  1591  0046  0422               	iorwf	(___aldiv@divisor+2),w
  1592  0047  0421               	iorwf	(___aldiv@divisor+1),w
  1593  0048  0420               	iorwf	(___aldiv@divisor),w
  1594  0049  1903               	skipnz
  1595  004A  284C               	goto	u2951
  1596  004B  284D               	goto	u2950
  1597  004C                     u2951:
  1598  004C  28A1               	goto	l3595
  1599  004D                     u2950:
  1600                           	line	20
  1601                           	
  1602  004D                     l3577:	
  1603  004D  01A9               	clrf	(___aldiv@counter)
  1604  004E  1403               	bsf	status,0
  1605  004F  0DA9               	rlf	(___aldiv@counter),f
  1606                           	line	21
  1607  0050  285F               	goto	l3581
  1608                           	
  1609  0051                     l2040:	
  1610                           	line	22
  1611                           	
  1612  0051                     l3579:	
  1613  0051  3001               	movlw	01h
  1614  0052  00A8               	movwf	(??___aldiv+0)+0
  1615  0053                     u2965:
  1616  0053  1003               	clrc
  1617  0054  0DA0               	rlf	(___aldiv@divisor),f
  1618  0055  0DA1               	rlf	(___aldiv@divisor+1),f
  1619  0056  0DA2               	rlf	(___aldiv@divisor+2),f
  1620  0057  0DA3               	rlf	(___aldiv@divisor+3),f
  1621  0058  0BA8               	decfsz	(??___aldiv+0)+0
  1622  0059  2853               	goto	u2965
  1623                           	line	23
  1624  005A  3001               	movlw	(01h)
  1625  005B  00A8               	movwf	(??___aldiv+0)+0
  1626  005C  0828               	movf	(??___aldiv+0)+0,w
  1627  005D  07A9               	addwf	(___aldiv@counter),f
  1628  005E  285F               	goto	l3581
  1629                           	line	24
  1630                           	
  1631  005F                     l2039:	
  1632                           	line	21
  1633                           	
  1634  005F                     l3581:	
  1635  005F  1FA3               	btfss	(___aldiv@divisor+3),(31)&7
  1636  0060  2862               	goto	u2971
  1637  0061  2863               	goto	u2970
  1638  0062                     u2971:
  1639  0062  2851               	goto	l3579
  1640  0063                     u2970:
  1641  0063  2865               	goto	l3583
  1642                           	
  1643  0064                     l2041:	
  1644  0064  2865               	goto	l3583
  1645                           	line	25
  1646                           	
  1647  0065                     l2042:	
  1648                           	line	26
  1649                           	
  1650  0065                     l3583:	
  1651  0065  3001               	movlw	01h
  1652  0066  00A8               	movwf	(??___aldiv+0)+0
  1653  0067                     u2985:
  1654  0067  1003               	clrc
  1655  0068  0DAB               	rlf	(___aldiv@quotient),f
  1656  0069  0DAC               	rlf	(___aldiv@quotient+1),f
  1657  006A  0DAD               	rlf	(___aldiv@quotient+2),f
  1658  006B  0DAE               	rlf	(___aldiv@quotient+3),f
  1659  006C  0BA8               	decfsz	(??___aldiv+0)+0
  1660  006D  2867               	goto	u2985
  1661                           	line	27
  1662                           	
  1663  006E                     l3585:	
  1664  006E  0823               	movf	(___aldiv@divisor+3),w
  1665  006F  0227               	subwf	(___aldiv@dividend+3),w
  1666  0070  1D03               	skipz
  1667  0071  287C               	goto	u2995
  1668  0072  0822               	movf	(___aldiv@divisor+2),w
  1669  0073  0226               	subwf	(___aldiv@dividend+2),w
  1670  0074  1D03               	skipz
  1671  0075  287C               	goto	u2995
  1672  0076  0821               	movf	(___aldiv@divisor+1),w
  1673  0077  0225               	subwf	(___aldiv@dividend+1),w
  1674  0078  1D03               	skipz
  1675  0079  287C               	goto	u2995
  1676  007A  0820               	movf	(___aldiv@divisor),w
  1677  007B  0224               	subwf	(___aldiv@dividend),w
  1678  007C                     u2995:
  1679  007C  1C03               	skipc
  1680  007D  287F               	goto	u2991
  1681  007E  2880               	goto	u2990
  1682  007F                     u2991:
  1683  007F  2890               	goto	l3591
  1684  0080                     u2990:
  1685                           	line	28
  1686                           	
  1687  0080                     l3587:	
  1688  0080  0820               	movf	(___aldiv@divisor),w
  1689  0081  02A4               	subwf	(___aldiv@dividend),f
  1690  0082  0821               	movf	(___aldiv@divisor+1),w
  1691  0083  1C03               	skipc
  1692  0084  0F21               	incfsz	(___aldiv@divisor+1),w
  1693  0085  02A5               	subwf	(___aldiv@dividend+1),f
  1694  0086  0822               	movf	(___aldiv@divisor+2),w
  1695  0087  1C03               	skipc
  1696  0088  0F22               	incfsz	(___aldiv@divisor+2),w
  1697  0089  02A6               	subwf	(___aldiv@dividend+2),f
  1698  008A  0823               	movf	(___aldiv@divisor+3),w
  1699  008B  1C03               	skipc
  1700  008C  0F23               	incfsz	(___aldiv@divisor+3),w
  1701  008D  02A7               	subwf	(___aldiv@dividend+3),f
  1702                           	line	29
  1703                           	
  1704  008E                     l3589:	
  1705  008E  142B               	bsf	(___aldiv@quotient)+(0/8),(0)&7
  1706  008F  2890               	goto	l3591
  1707                           	line	30
  1708                           	
  1709  0090                     l2043:	
  1710                           	line	31
  1711                           	
  1712  0090                     l3591:	
  1713  0090  3001               	movlw	01h
  1714  0091                     u3005:
  1715  0091  1003               	clrc
  1716  0092  0CA3               	rrf	(___aldiv@divisor+3),f
  1717  0093  0CA2               	rrf	(___aldiv@divisor+2),f
  1718  0094  0CA1               	rrf	(___aldiv@divisor+1),f
  1719  0095  0CA0               	rrf	(___aldiv@divisor),f
  1720  0096  3EFF               	addlw	-1
  1721  0097  1D03               	skipz
  1722  0098  2891               	goto	u3005
  1723                           
  1724                           	line	32
  1725                           	
  1726  0099                     l3593:	
  1727  0099  3001               	movlw	low(01h)
  1728  009A  02A9               	subwf	(___aldiv@counter),f
  1729  009B  1D03               	btfss	status,2
  1730  009C  289E               	goto	u3011
  1731  009D  289F               	goto	u3010
  1732  009E                     u3011:
  1733  009E  2865               	goto	l3583
  1734  009F                     u3010:
  1735  009F  28A1               	goto	l3595
  1736                           	
  1737  00A0                     l2044:	
  1738  00A0  28A1               	goto	l3595
  1739                           	line	33
  1740                           	
  1741  00A1                     l2038:	
  1742                           	line	34
  1743                           	
  1744  00A1                     l3595:	
  1745  00A1  082A               	movf	(___aldiv@sign),w
  1746  00A2  1D03               	skipz
  1747  00A3  28A5               	goto	u3020
  1748  00A4  28B1               	goto	l3599
  1749  00A5                     u3020:
  1750                           	line	35
  1751                           	
  1752  00A5                     l3597:	
  1753  00A5  09AB               	comf	(___aldiv@quotient),f
  1754  00A6  09AC               	comf	(___aldiv@quotient+1),f
  1755  00A7  09AD               	comf	(___aldiv@quotient+2),f
  1756  00A8  09AE               	comf	(___aldiv@quotient+3),f
  1757  00A9  0AAB               	incf	(___aldiv@quotient),f
  1758  00AA  1903               	skipnz
  1759  00AB  0AAC               	incf	(___aldiv@quotient+1),f
  1760  00AC  1903               	skipnz
  1761  00AD  0AAD               	incf	(___aldiv@quotient+2),f
  1762  00AE  1903               	skipnz
  1763  00AF  0AAE               	incf	(___aldiv@quotient+3),f
  1764  00B0  28B1               	goto	l3599
  1765                           	
  1766  00B1                     l2045:	
  1767                           	line	36
  1768                           	
  1769  00B1                     l3599:	
  1770  00B1  082E               	movf	(___aldiv@quotient+3),w
  1771  00B2  00A3               	movwf	(?___aldiv+3)
  1772  00B3  082D               	movf	(___aldiv@quotient+2),w
  1773  00B4  00A2               	movwf	(?___aldiv+2)
  1774  00B5  082C               	movf	(___aldiv@quotient+1),w
  1775  00B6  00A1               	movwf	(?___aldiv+1)
  1776  00B7  082B               	movf	(___aldiv@quotient),w
  1777  00B8  00A0               	movwf	(?___aldiv)
  1778                           
  1779  00B9  28BA               	goto	l2046
  1780                           	
  1781  00BA                     l3601:	
  1782                           	line	37
  1783                           	
  1784  00BA                     l2046:	
  1785  00BA  0008               	return
  1786                           	opt stack 0
  1787                           GLOBAL	__end_of___aldiv
  1788  00BB                     	__end_of___aldiv:
  1789 ;; =============== function ___aldiv ends ============
  1790                           
  1791                           	signat	___aldiv,8316
  1792                           	global	_SendByteSerially
  1793                           psect	text334,local,class=CODE,delta=2
  1794                           global __ptext334
  1795  0357                     __ptext334:
  1796                           
  1797 ;; *************** function _SendByteSerially *****************
  1798 ;; Defined at:
  1799 ;;		line 18 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  Byte            1    wreg     unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  Byte            1    0[BANK0 ] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;		None               void
  1806 ;; Registers used:
  1807 ;;		wreg
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1813 ;;      Params:         0       0       0       0
  1814 ;;      Locals:         0       1       0       0
  1815 ;;      Temps:          0       0       0       0
  1816 ;;      Totals:         0       1       0       0
  1817 ;;Total ram usage:        1 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    3
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_SendStringSerially
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           psect	text334
  1827                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\uart.h"
  1828                           	line	18
  1829                           	global	__size_of_SendByteSerially
  1830  000C                     	__size_of_SendByteSerially	equ	__end_of_SendByteSerially-_SendByteSerially
  1831                           	
  1832  0357                     _SendByteSerially:	
  1833                           	opt	stack 3
  1834                           ; Regs used in _SendByteSerially: [wreg]
  1835                           ;SendByteSerially@Byte stored from wreg
  1836  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  1837  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  1838  0359  00A0               	movwf	(SendByteSerially@Byte)
  1839                           	line	19
  1840                           	
  1841  035A                     l3489:	
  1842                           ;uart.h: 19: while(!TXIF);
  1843  035A  2B5B               	goto	l946
  1844                           	
  1845  035B                     l947:	
  1846                           	
  1847  035B                     l946:	
  1848  035B  1E0C               	btfss	(100/8),(100)&7
  1849  035C  2B5E               	goto	u2721
  1850  035D  2B5F               	goto	u2720
  1851  035E                     u2721:
  1852  035E  2B5B               	goto	l946
  1853  035F                     u2720:
  1854  035F  2B60               	goto	l3491
  1855                           	
  1856  0360                     l948:	
  1857                           	line	20
  1858                           	
  1859  0360                     l3491:	
  1860                           ;uart.h: 20: TXREG = Byte;
  1861  0360  0820               	movf	(SendByteSerially@Byte),w
  1862  0361  0099               	movwf	(25)	;volatile
  1863                           	line	21
  1864                           	
  1865  0362                     l949:	
  1866  0362  0008               	return
  1867                           	opt stack 0
  1868                           GLOBAL	__end_of_SendByteSerially
  1869  0363                     	__end_of_SendByteSerially:
  1870 ;; =============== function _SendByteSerially ends ============
  1871                           
  1872                           	signat	_SendByteSerially,4216
  1873                           	global	_Lcd_Write
  1874                           psect	text335,local,class=CODE,delta=2
  1875                           global __ptext335
  1876  0168                     __ptext335:
  1877                           
  1878 ;; *************** function _Lcd_Write *****************
  1879 ;; Defined at:
  1880 ;;		line 14 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  rs              1    wreg     unsigned char 
  1883 ;;  c               1    0[BANK0 ] unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  rs              1    7[BANK0 ] unsigned char 
  1886 ;;  _dcnt           2    5[BANK0 ] unsigned int 
  1887 ;;  _dcnt           2    3[BANK0 ] unsigned int 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;		None               void
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1897 ;;      Params:         0       1       0       0
  1898 ;;      Locals:         0       5       0       0
  1899 ;;      Temps:          0       2       0       0
  1900 ;;      Totals:         0       8       0       0
  1901 ;;Total ram usage:        8 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_Lcd_String
  1908 ;;		_LCD_INIT
  1909 ;;		_main
  1910 ;;		_Lcd_Goto
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           psect	text335
  1914                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  1915                           	line	14
  1916                           	global	__size_of_Lcd_Write
  1917  004E                     	__size_of_Lcd_Write	equ	__end_of_Lcd_Write-_Lcd_Write
  1918                           	
  1919  0168                     _Lcd_Write:	
  1920                           	opt	stack 4
  1921                           ; Regs used in _Lcd_Write: [wreg+status,2+status,0]
  1922                           ;Lcd_Write@rs stored from wreg
  1923  0168  1283               	bcf	status, 5	;RP0=0, select bank0
  1924  0169  1303               	bcf	status, 6	;RP1=0, select bank0
  1925  016A  00A7               	movwf	(Lcd_Write@rs)
  1926                           	line	15
  1927                           	
  1928  016B                     l3421:	
  1929                           ;lcd.h: 15: RA4 =rs;
  1930  016B  1827               	btfsc	(Lcd_Write@rs),0
  1931  016C  296E               	goto	u2591
  1932  016D  2972               	goto	u2590
  1933                           	
  1934  016E                     u2591:
  1935  016E  1283               	bcf	status, 5	;RP0=0, select bank0
  1936  016F  1303               	bcf	status, 6	;RP1=0, select bank0
  1937  0170  1605               	bsf	(44/8),(44)&7
  1938  0171  2975               	goto	u2604
  1939  0172                     u2590:
  1940  0172  1283               	bcf	status, 5	;RP0=0, select bank0
  1941  0173  1303               	bcf	status, 6	;RP1=0, select bank0
  1942  0174  1205               	bcf	(44/8),(44)&7
  1943  0175                     u2604:
  1944                           	line	16
  1945                           	
  1946  0175                     l3423:	
  1947                           ;lcd.h: 16: { unsigned int _dcnt; _dcnt = (40)/7.5; while(--_dcnt != 0) continue; };
  1948  0175  3005               	movlw	low(05h)
  1949  0176  00A3               	movwf	(Lcd_Write@_dcnt)
  1950  0177  3000               	movlw	high(05h)
  1951  0178  00A4               	movwf	((Lcd_Write@_dcnt))+1
  1952  0179  297B               	goto	l3425
  1953                           	
  1954  017A                     l900:	
  1955  017A  297B               	goto	l3425
  1956                           	
  1957  017B                     l899:	
  1958                           	
  1959  017B                     l3425:	
  1960  017B  3001               	movlw	low(01h)
  1961  017C  02A3               	subwf	(Lcd_Write@_dcnt),f
  1962  017D  3000               	movlw	high(01h)
  1963  017E  1C03               	skipc
  1964  017F  03A4               	decf	(Lcd_Write@_dcnt+1),f
  1965  0180  02A4               	subwf	(Lcd_Write@_dcnt+1),f
  1966  0181  0824               	movf	(((Lcd_Write@_dcnt+1))),w
  1967  0182  0423               	iorwf	(((Lcd_Write@_dcnt))),w
  1968  0183  1D03               	skipz
  1969  0184  2986               	goto	u2611
  1970  0185  2987               	goto	u2610
  1971  0186                     u2611:
  1972  0186  297B               	goto	l3425
  1973  0187                     u2610:
  1974  0187  2988               	goto	l3427
  1975                           	
  1976  0188                     l901:	
  1977                           	line	17
  1978                           	
  1979  0188                     l3427:	
  1980                           ;lcd.h: 17: PORTC = (PORTC & 0x0F) | (c & 0xF0);
  1981  0188  30F0               	movlw	(0F0h)
  1982  0189  0520               	andwf	(Lcd_Write@c),w
  1983  018A  00A1               	movwf	(??_Lcd_Write+0)+0
  1984  018B  0807               	movf	(7),w
  1985  018C  390F               	andlw	0Fh
  1986  018D  0421               	iorwf	0+(??_Lcd_Write+0)+0,w
  1987  018E  0087               	movwf	(7)	;volatile
  1988                           	line	18
  1989                           	
  1990  018F                     l3429:	
  1991                           ;lcd.h: 18: ((RA5 = 1),(RA5=0));
  1992  018F  1685               	bsf	(45/8),(45)&7
  1993                           	
  1994  0190                     l3431:	
  1995  0190  1285               	bcf	(45/8),(45)&7
  1996                           	line	19
  1997                           ;lcd.h: 19: PORTC = (PORTC & 0x0F) | ( ( c << 4 ) & 0xF0 );
  1998  0191  0820               	movf	(Lcd_Write@c),w
  1999  0192  00A1               	movwf	(??_Lcd_Write+0)+0
  2000  0193  3004               	movlw	04h
  2001  0194                     u2625:
  2002  0194  1003               	clrc
  2003  0195  0DA1               	rlf	(??_Lcd_Write+0)+0,f
  2004  0196  3EFF               	addlw	-1
  2005  0197  1D03               	skipz
  2006  0198  2994               	goto	u2625
  2007  0199  30F0               	movlw	(0F0h)
  2008  019A  0521               	andwf	0+(??_Lcd_Write+0)+0,w
  2009  019B  00A2               	movwf	(??_Lcd_Write+1)+0
  2010  019C  0807               	movf	(7),w
  2011  019D  390F               	andlw	0Fh
  2012  019E  0422               	iorwf	0+(??_Lcd_Write+1)+0,w
  2013  019F  0087               	movwf	(7)	;volatile
  2014                           	line	20
  2015                           	
  2016  01A0                     l3433:	
  2017                           ;lcd.h: 20: ((RA5 = 1),(RA5=0));
  2018  01A0  1685               	bsf	(45/8),(45)&7
  2019                           	
  2020  01A1                     l3435:	
  2021  01A1  1285               	bcf	(45/8),(45)&7
  2022                           	line	21
  2023                           	
  2024  01A2                     l3437:	
  2025                           ;lcd.h: 21: { unsigned int _dcnt; _dcnt = (40)/7.5; while(--_dcnt != 0) continue; };
  2026  01A2  3005               	movlw	low(05h)
  2027  01A3  00A5               	movwf	(Lcd_Write@_dcnt_1579)
  2028  01A4  3000               	movlw	high(05h)
  2029  01A5  00A6               	movwf	((Lcd_Write@_dcnt_1579))+1
  2030  01A6  29A8               	goto	l3439
  2031                           	
  2032  01A7                     l903:	
  2033  01A7  29A8               	goto	l3439
  2034                           	
  2035  01A8                     l902:	
  2036                           	
  2037  01A8                     l3439:	
  2038  01A8  3001               	movlw	low(01h)
  2039  01A9  02A5               	subwf	(Lcd_Write@_dcnt_1579),f
  2040  01AA  3000               	movlw	high(01h)
  2041  01AB  1C03               	skipc
  2042  01AC  03A6               	decf	(Lcd_Write@_dcnt_1579+1),f
  2043  01AD  02A6               	subwf	(Lcd_Write@_dcnt_1579+1),f
  2044  01AE  0826               	movf	(((Lcd_Write@_dcnt_1579+1))),w
  2045  01AF  0425               	iorwf	(((Lcd_Write@_dcnt_1579))),w
  2046  01B0  1D03               	skipz
  2047  01B1  29B3               	goto	u2631
  2048  01B2  29B4               	goto	u2630
  2049  01B3                     u2631:
  2050  01B3  29A8               	goto	l3439
  2051  01B4                     u2630:
  2052  01B4  29B5               	goto	l905
  2053                           	
  2054  01B5                     l904:	
  2055                           	line	22
  2056                           	
  2057  01B5                     l905:	
  2058  01B5  0008               	return
  2059                           	opt stack 0
  2060                           GLOBAL	__end_of_Lcd_Write
  2061  01B6                     	__end_of_Lcd_Write:
  2062 ;; =============== function _Lcd_Write ends ============
  2063                           
  2064                           	signat	_Lcd_Write,8312
  2065                           	global	_DelayMs
  2066                           psect	text336,local,class=CODE,delta=2
  2067                           global __ptext336
  2068  028A                     __ptext336:
  2069                           
  2070 ;; *************** function _DelayMs *****************
  2071 ;; Defined at:
  2072 ;;		line 54 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\delay.h"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  cnt             2    0[BANK0 ] unsigned int 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  _dcnt           2    2[BANK0 ] unsigned int 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2086 ;;      Params:         0       2       0       0
  2087 ;;      Locals:         0       2       0       0
  2088 ;;      Temps:          0       0       0       0
  2089 ;;      Totals:         0       4       0       0
  2090 ;;Total ram usage:        4 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_Lcd_String
  2097 ;;		_LCD_INIT
  2098 ;;		_SYSTEM_INIT
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           psect	text336
  2103                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\delay.h"
  2104                           	line	54
  2105                           	global	__size_of_DelayMs
  2106  0023                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  2107                           	
  2108  028A                     _DelayMs:	
  2109                           	opt	stack 3
  2110                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2111                           	line	55
  2112                           ;delay.h: 55: do {
  2113                           	
  2114  028A                     l891:	
  2115                           	line	56
  2116                           	
  2117  028A                     l3415:	
  2118                           ;delay.h: 56: { unsigned int _dcnt; _dcnt = (1000)/7.5; while(--_dcnt != 0) continue; };
  2119  028A  3085               	movlw	low(085h)
  2120  028B  1283               	bcf	status, 5	;RP0=0, select bank0
  2121  028C  1303               	bcf	status, 6	;RP1=0, select bank0
  2122  028D  00A2               	movwf	(DelayMs@_dcnt)
  2123  028E  3000               	movlw	high(085h)
  2124  028F  00A3               	movwf	((DelayMs@_dcnt))+1
  2125  0290  2A92               	goto	l3417
  2126                           	
  2127  0291                     l893:	
  2128  0291  2A92               	goto	l3417
  2129                           	
  2130  0292                     l892:	
  2131                           	
  2132  0292                     l3417:	
  2133  0292  3001               	movlw	low(01h)
  2134  0293  02A2               	subwf	(DelayMs@_dcnt),f
  2135  0294  3000               	movlw	high(01h)
  2136  0295  1C03               	skipc
  2137  0296  03A3               	decf	(DelayMs@_dcnt+1),f
  2138  0297  02A3               	subwf	(DelayMs@_dcnt+1),f
  2139  0298  0823               	movf	(((DelayMs@_dcnt+1))),w
  2140  0299  0422               	iorwf	(((DelayMs@_dcnt))),w
  2141  029A  1D03               	skipz
  2142  029B  2A9D               	goto	u2571
  2143  029C  2A9E               	goto	u2570
  2144  029D                     u2571:
  2145  029D  2A92               	goto	l3417
  2146  029E                     u2570:
  2147  029E  2A9F               	goto	l3419
  2148                           	
  2149  029F                     l894:	
  2150                           	line	57
  2151                           	
  2152  029F                     l3419:	
  2153                           ;delay.h: 57: } while(--cnt);
  2154  029F  3001               	movlw	low(01h)
  2155  02A0  02A0               	subwf	(DelayMs@cnt),f
  2156  02A1  3000               	movlw	high(01h)
  2157  02A2  1C03               	skipc
  2158  02A3  03A1               	decf	(DelayMs@cnt+1),f
  2159  02A4  02A1               	subwf	(DelayMs@cnt+1),f
  2160  02A5  0821               	movf	(((DelayMs@cnt+1))),w
  2161  02A6  0420               	iorwf	(((DelayMs@cnt))),w
  2162  02A7  1D03               	skipz
  2163  02A8  2AAA               	goto	u2581
  2164  02A9  2AAB               	goto	u2580
  2165  02AA                     u2581:
  2166  02AA  2A8A               	goto	l891
  2167  02AB                     u2580:
  2168  02AB  2AAC               	goto	l896
  2169                           	
  2170  02AC                     l895:	
  2171                           	line	58
  2172                           	
  2173  02AC                     l896:	
  2174  02AC  0008               	return
  2175                           	opt stack 0
  2176                           GLOBAL	__end_of_DelayMs
  2177  02AD                     	__end_of_DelayMs:
  2178 ;; =============== function _DelayMs ends ============
  2179                           
  2180                           	signat	_DelayMs,4216
  2181                           	global	_ISR
  2182                           psect	text337,local,class=CODE,delta=2
  2183                           global __ptext337
  2184  02AD                     __ptext337:
  2185                           
  2186 ;; *************** function _ISR *****************
  2187 ;; Defined at:
  2188 ;;		line 19 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2202 ;;      Params:         0       0       0       0
  2203 ;;      Locals:         0       0       0       0
  2204 ;;      Temps:          4       0       0       0
  2205 ;;      Totals:         4       0       0       0
  2206 ;;Total ram usage:        4 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    2
  2209 ;; This function calls:
  2210 ;;		_Lcd_Char
  2211 ;; This function is called by:
  2212 ;;		Interrupt level 1
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           psect	text337
  2216                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\main.c"
  2217                           	line	19
  2218                           	global	__size_of_ISR
  2219  0023                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  2220                           	
  2221  02AD                     _ISR:	
  2222                           	opt	stack 3
  2223                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2224                           psect	intentry,class=CODE,delta=2
  2225                           global __pintentry
  2226  0004                     __pintentry:
  2227                           global interrupt_function
  2228  0004                     interrupt_function:
  2229                           	global saved_w
  2230  007E                     	saved_w	set	btemp+0
  2231  0004  00FE               	movwf	saved_w
  2232  0005  0E03               	swapf	status,w
  2233  0006  00FA               	movwf	(??_ISR+0)
  2234  0007  0804               	movf	fsr0,w
  2235  0008  00FB               	movwf	(??_ISR+1)
  2236  0009  080A               	movf	pclath,w
  2237  000A  00FC               	movwf	(??_ISR+2)
  2238  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2239  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2240  000D  087F               	movf	btemp+1,w
  2241  000E  00FD               	movwf	(??_ISR+3)
  2242  000F  118A  2AAD         	ljmp	_ISR
  2243                           psect	text337
  2244                           	line	20
  2245                           	
  2246  02AD                     i1l3493:	
  2247                           ;main.c: 20: if(RCIF)
  2248  02AD  1E8C               	btfss	(101/8),(101)&7
  2249  02AE  2AB0               	goto	u273_21
  2250  02AF  2AB1               	goto	u273_20
  2251  02B0                     u273_21:
  2252  02B0  2AC3               	goto	i1l973
  2253  02B1                     u273_20:
  2254                           	line	22
  2255                           	
  2256  02B1                     i1l3495:	
  2257                           ;main.c: 21: {
  2258                           ;main.c: 22: if(OERR)
  2259  02B1  1C98               	btfss	(193/8),(193)&7
  2260  02B2  2AB4               	goto	u274_21
  2261  02B3  2AB5               	goto	u274_20
  2262  02B4                     u274_21:
  2263  02B4  2AB9               	goto	i1l970
  2264  02B5                     u274_20:
  2265                           	line	24
  2266                           	
  2267  02B5                     i1l3497:	
  2268                           ;main.c: 23: {
  2269                           ;main.c: 24: CREN = 0;
  2270  02B5  1218               	bcf	(196/8),(196)&7
  2271                           	line	25
  2272                           ;main.c: 25: CREN = 1;
  2273  02B6  1618               	bsf	(196/8),(196)&7
  2274  02B7  2AB9               	goto	i1l970
  2275                           	line	26
  2276                           	
  2277  02B8                     i1l969:	
  2278                           	line	27
  2279                           ;main.c: 26: }
  2280                           ;main.c: 27: while(!RCIF);
  2281  02B8  2AB9               	goto	i1l970
  2282                           	
  2283  02B9                     i1l971:	
  2284                           	
  2285  02B9                     i1l970:	
  2286  02B9  1E8C               	btfss	(101/8),(101)&7
  2287  02BA  2ABC               	goto	u275_21
  2288  02BB  2ABD               	goto	u275_20
  2289  02BC                     u275_21:
  2290  02BC  2AB9               	goto	i1l970
  2291  02BD                     u275_20:
  2292  02BD  2ABE               	goto	i1l3499
  2293                           	
  2294  02BE                     i1l972:	
  2295                           	line	28
  2296                           	
  2297  02BE                     i1l3499:	
  2298                           ;main.c: 28: Lcd_Char(RCREG);
  2299  02BE  081A               	movf	(26),w	;volatile
  2300  02BF  118A  236D  118A   	fcall	_Lcd_Char
  2301  02C2  2AC3               	goto	i1l973
  2302                           	line	29
  2303                           	
  2304  02C3                     i1l968:	
  2305                           	line	30
  2306                           	
  2307  02C3                     i1l973:	
  2308  02C3  087D               	movf	(??_ISR+3),w
  2309  02C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2310  02C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2311  02C6  00FF               	movwf	btemp+1
  2312  02C7  087C               	movf	(??_ISR+2),w
  2313  02C8  008A               	movwf	pclath
  2314  02C9  087B               	movf	(??_ISR+1),w
  2315  02CA  0084               	movwf	fsr0
  2316  02CB  0E7A               	swapf	(??_ISR+0)^0FFFFFF80h,w
  2317  02CC  0083               	movwf	status
  2318  02CD  0EFE               	swapf	saved_w,f
  2319  02CE  0E7E               	swapf	saved_w,w
  2320  02CF  0009               	retfie
  2321                           	opt stack 0
  2322                           GLOBAL	__end_of_ISR
  2323  02D0                     	__end_of_ISR:
  2324 ;; =============== function _ISR ends ============
  2325                           
  2326                           	signat	_ISR,88
  2327                           	global	_Lcd_Char
  2328                           psect	text338,local,class=CODE,delta=2
  2329                           global __ptext338
  2330  036D                     __ptext338:
  2331                           
  2332 ;; *************** function _Lcd_Char *****************
  2333 ;; Defined at:
  2334 ;;		line 26 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  c               1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  c               1    9[COMMON] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;		None               void
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2348 ;;      Params:         0       0       0       0
  2349 ;;      Locals:         1       0       0       0
  2350 ;;      Temps:          1       0       0       0
  2351 ;;      Totals:         2       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    1
  2355 ;; This function calls:
  2356 ;;		i1_Lcd_Write
  2357 ;; This function is called by:
  2358 ;;		_ISR
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           psect	text338
  2362                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  2363                           	line	26
  2364                           	global	__size_of_Lcd_Char
  2365  000A                     	__size_of_Lcd_Char	equ	__end_of_Lcd_Char-_Lcd_Char
  2366                           	
  2367  036D                     _Lcd_Char:	
  2368                           	opt	stack 3
  2369                           ; Regs used in _Lcd_Char: [wreg+status,2+status,0+pclath+cstack]
  2370                           ;Lcd_Char@c stored from wreg
  2371  036D  00F9               	movwf	(Lcd_Char@c)
  2372                           	line	27
  2373                           	
  2374  036E                     i1l3441:	
  2375                           ;lcd.h: 27: Lcd_Write( 1, c );
  2376  036E  0879               	movf	(Lcd_Char@c),w
  2377  036F  00F8               	movwf	(??_Lcd_Char+0)+0
  2378  0370  0878               	movf	(??_Lcd_Char+0)+0,w
  2379  0371  00F0               	movwf	(?i1_Lcd_Write)
  2380  0372  3001               	movlw	(01h)
  2381  0373  118A  21B6  118A   	fcall	i1_Lcd_Write
  2382                           	line	28
  2383                           	
  2384  0376                     i1l908:	
  2385  0376  0008               	return
  2386                           	opt stack 0
  2387                           GLOBAL	__end_of_Lcd_Char
  2388  0377                     	__end_of_Lcd_Char:
  2389 ;; =============== function _Lcd_Char ends ============
  2390                           
  2391                           	signat	_Lcd_Char,4216
  2392                           	global	i1_Lcd_Write
  2393                           psect	text339,local,class=CODE,delta=2
  2394                           global __ptext339
  2395  01B6                     __ptext339:
  2396                           
  2397 ;; *************** function i1_Lcd_Write *****************
  2398 ;; Defined at:
  2399 ;;		line 14 in file "F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  Lcd_Write       1    wreg     unsigned char 
  2402 ;;  Lcd_Write       1    0[COMMON] unsigned char 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  Lcd_Write       1    3[COMMON] unsigned char 
  2405 ;;  Lcd_Write       2    6[COMMON] unsigned int 
  2406 ;;  Lcd_Write       2    4[COMMON] unsigned int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2416 ;;      Params:         1       0       0       0
  2417 ;;      Locals:         5       0       0       0
  2418 ;;      Temps:          2       0       0       0
  2419 ;;      Totals:         8       0       0       0
  2420 ;;Total ram usage:        8 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_Lcd_Char
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           psect	text339
  2429                           	file	"F:\BEVERAGES_ENHANCEMENT\SOFTWARE_DESIGN\SLAVE_PIC_16F690\2015_09_05\lcd.h"
  2430                           	line	14
  2431                           	global	__size_ofi1_Lcd_Write
  2432  004E                     	__size_ofi1_Lcd_Write	equ	__end_ofi1_Lcd_Write-i1_Lcd_Write
  2433                           	
  2434  01B6                     i1_Lcd_Write:	
  2435                           	opt	stack 3
  2436                           ; Regs used in i1_Lcd_Write: [wreg+status,2+status,0]
  2437                           ;i1Lcd_Write@rs stored from wreg
  2438  01B6  00F3               	movwf	(i1Lcd_Write@rs)
  2439                           	line	15
  2440                           	
  2441  01B7                     i1l3603:	
  2442                           ;lcd.h: 15: RA4 =rs;
  2443  01B7  1873               	btfsc	(i1Lcd_Write@rs),0
  2444  01B8  29BA               	goto	u303_21
  2445  01B9  29BE               	goto	u303_20
  2446                           	
  2447  01BA                     u303_21:
  2448  01BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2449  01BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2450  01BC  1605               	bsf	(44/8),(44)&7
  2451  01BD  29C1               	goto	u304_24
  2452  01BE                     u303_20:
  2453  01BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  01BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  01C0  1205               	bcf	(44/8),(44)&7
  2456  01C1                     u304_24:
  2457                           	line	16
  2458                           	
  2459  01C1                     i1l3605:	
  2460                           ;lcd.h: 16: { unsigned int _dcnt; _dcnt = (40)/7.5; while(--_dcnt != 0) continue; };
  2461  01C1  3005               	movlw	low(05h)
  2462  01C2  00F4               	movwf	(i1Lcd_Write@_dcnt)
  2463  01C3  3000               	movlw	high(05h)
  2464  01C4  00F5               	movwf	((i1Lcd_Write@_dcnt))+1
  2465  01C5  29C7               	goto	i1l3607
  2466                           	
  2467  01C6                     i1l900:	
  2468  01C6  29C7               	goto	i1l3607
  2469                           	
  2470  01C7                     i1l899:	
  2471                           	
  2472  01C7                     i1l3607:	
  2473  01C7  3001               	movlw	low(01h)
  2474  01C8  02F4               	subwf	(i1Lcd_Write@_dcnt),f
  2475  01C9  3000               	movlw	high(01h)
  2476  01CA  1C03               	skipc
  2477  01CB  03F5               	decf	(i1Lcd_Write@_dcnt+1),f
  2478  01CC  02F5               	subwf	(i1Lcd_Write@_dcnt+1),f
  2479  01CD  0875               	movf	(((i1Lcd_Write@_dcnt+1))),w
  2480  01CE  0474               	iorwf	(((i1Lcd_Write@_dcnt))),w
  2481  01CF  1D03               	skipz
  2482  01D0  29D2               	goto	u305_21
  2483  01D1  29D3               	goto	u305_20
  2484  01D2                     u305_21:
  2485  01D2  29C7               	goto	i1l3607
  2486  01D3                     u305_20:
  2487  01D3  29D4               	goto	i1l3609
  2488                           	
  2489  01D4                     i1l901:	
  2490                           	line	17
  2491                           	
  2492  01D4                     i1l3609:	
  2493                           ;lcd.h: 17: PORTC = (PORTC & 0x0F) | (c & 0xF0);
  2494  01D4  30F0               	movlw	(0F0h)
  2495  01D5  0570               	andwf	(i1Lcd_Write@c),w
  2496  01D6  00F1               	movwf	(??i1_Lcd_Write+0)+0
  2497  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2498  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2499  01D9  0807               	movf	(7),w
  2500  01DA  390F               	andlw	0Fh
  2501  01DB  0471               	iorwf	0+(??i1_Lcd_Write+0)+0,w
  2502  01DC  0087               	movwf	(7)	;volatile
  2503                           	line	18
  2504                           	
  2505  01DD                     i1l3611:	
  2506                           ;lcd.h: 18: ((RA5 = 1),(RA5=0));
  2507  01DD  1685               	bsf	(45/8),(45)&7
  2508                           	
  2509  01DE                     i1l3613:	
  2510  01DE  1285               	bcf	(45/8),(45)&7
  2511                           	line	19
  2512                           ;lcd.h: 19: PORTC = (PORTC & 0x0F) | ( ( c << 4 ) & 0xF0 );
  2513  01DF  0870               	movf	(i1Lcd_Write@c),w
  2514  01E0  00F1               	movwf	(??i1_Lcd_Write+0)+0
  2515  01E1  3004               	movlw	04h
  2516  01E2                     u306_25:
  2517  01E2  1003               	clrc
  2518  01E3  0DF1               	rlf	(??i1_Lcd_Write+0)+0,f
  2519  01E4  3EFF               	addlw	-1
  2520  01E5  1D03               	skipz
  2521  01E6  29E2               	goto	u306_25
  2522  01E7  30F0               	movlw	(0F0h)
  2523  01E8  0571               	andwf	0+(??i1_Lcd_Write+0)+0,w
  2524  01E9  00F2               	movwf	(??i1_Lcd_Write+1)+0
  2525  01EA  0807               	movf	(7),w
  2526  01EB  390F               	andlw	0Fh
  2527  01EC  0472               	iorwf	0+(??i1_Lcd_Write+1)+0,w
  2528  01ED  0087               	movwf	(7)	;volatile
  2529                           	line	20
  2530                           	
  2531  01EE                     i1l3615:	
  2532                           ;lcd.h: 20: ((RA5 = 1),(RA5=0));
  2533  01EE  1685               	bsf	(45/8),(45)&7
  2534                           	
  2535  01EF                     i1l3617:	
  2536  01EF  1285               	bcf	(45/8),(45)&7
  2537                           	line	21
  2538                           	
  2539  01F0                     i1l3619:	
  2540                           ;lcd.h: 21: { unsigned int _dcnt; _dcnt = (40)/7.5; while(--_dcnt != 0) continue; };
  2541  01F0  3005               	movlw	low(05h)
  2542  01F1  00F6               	movwf	(i1Lcd_Write@_dcnt_1579)
  2543  01F2  3000               	movlw	high(05h)
  2544  01F3  00F7               	movwf	((i1Lcd_Write@_dcnt_1579))+1
  2545  01F4  29F6               	goto	i1l3621
  2546                           	
  2547  01F5                     i1l903:	
  2548  01F5  29F6               	goto	i1l3621
  2549                           	
  2550  01F6                     i1l902:	
  2551                           	
  2552  01F6                     i1l3621:	
  2553  01F6  3001               	movlw	low(01h)
  2554  01F7  02F6               	subwf	(i1Lcd_Write@_dcnt_1579),f
  2555  01F8  3000               	movlw	high(01h)
  2556  01F9  1C03               	skipc
  2557  01FA  03F7               	decf	(i1Lcd_Write@_dcnt_1579+1),f
  2558  01FB  02F7               	subwf	(i1Lcd_Write@_dcnt_1579+1),f
  2559  01FC  0877               	movf	(((i1Lcd_Write@_dcnt_1579+1))),w
  2560  01FD  0476               	iorwf	(((i1Lcd_Write@_dcnt_1579))),w
  2561  01FE  1D03               	skipz
  2562  01FF  2A01               	goto	u307_21
  2563  0200  2A02               	goto	u307_20
  2564  0201                     u307_21:
  2565  0201  29F6               	goto	i1l3621
  2566  0202                     u307_20:
  2567  0202  2A03               	goto	i1l905
  2568                           	
  2569  0203                     i1l904:	
  2570                           	line	22
  2571                           	
  2572  0203                     i1l905:	
  2573  0203  0008               	return
  2574                           	opt stack 0
  2575                           GLOBAL	__end_ofi1_Lcd_Write
  2576  0204                     	__end_ofi1_Lcd_Write:
  2577 ;; =============== function i1_Lcd_Write ends ============
  2578                           
  2579                           	signat	i1_Lcd_Write,88
  2580                           psect	text340,local,class=CODE,delta=2
  2581                           global __ptext340
  2582  0000                     __ptext340:
  2583                           	global	btemp
  2584  007E                     	btemp set 07Eh
  2585                           
  2586                           	DABS	1,126,2	;btemp
  2587                           	global	wtemp0
  2588  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Sep 13 12:13:27 2015

                          pc 0002                           _RD 0C60                           _WR 0C61  
                         fsr 0004                LCD_INIT@_dcnt 0029                          l900 017A  
                        l901 0188                          l902 01A8                          l903 01A7  
                        l911 015A                          l904 01B5                          l912 011A  
                        l905 01B5                          l913 014D                          l914 011B  
                        l930 00E1                          l915 0159                          l931 0115  
                        l916 012C                          l917 0137                          l918 0167  
                        l919 0167                          l943 0289                          l928 00D4  
                        l952 02E3                          l929 00D3                          l953 02D4  
                        l946 035B                          l954 02EE                          l891 028A  
                        l947 035B                          l955 02EE                          l892 0292  
                        l948 0360                          l980 024D                          l893 0291  
                        l949 0362                          l981 024E                          l894 029F  
                        l982 024E                          l895 02AC                          l896 02AC  
                        l976 0336                          l899 017B                          l979 023F  
                        _GIE 005F                          _RA4 002C                          _RA5 002D  
                        _ISR 02AD                          fsr0 0004                          indf 0000  
                       ?_ISR 0070                         l2040 0051                         l2041 0064  
                       l2042 0065                         l2043 0090                         l2044 00A0  
                       l2036 0029                         l2045 00B1                         l2037 003D  
                       l2046 00BA                         l2038 00A1                         l2039 005F  
                       l3421 016B                         l3415 028A                         l3431 0190  
                       l3423 0175                         l3417 0292                         l3433 01A0  
                       l3425 017B                         l3601 00BA                         l3419 029F  
                       l3435 01A1                         l3427 0188                         l3437 01A2  
                       l3429 018F                         l3701 032B                         l3439 01A8  
                       l3631 0145                         l3623 0119                         l3703 032F  
                       l3711 022D                         l3561 0013                         l3633 014C  
                       l3625 011B                         l3641 00BF                         l3713 0236  
                       l3705 0204                         l3491 0360                         l3571 0038  
                       l3563 001A                         l3627 012C                         l3635 014D  
                       l3651 00D4                         l3643 00C6                         l3715 0243  
                       l3707 0220                         l3581 005F                         l3573 003D  
                       l3565 0025                         l3629 0137                         l3637 015A  
                       l3661 00EF                         l3653 00E1                         l3645 00CC  
                       l3709 0224                         l3591 0090                         l3583 0065  
                       l3575 0045                         l3567 0029                         l3663 00F9  
                       l3655 00E5                         l3647 00CD                         l3639 00BB  
                       l3671 027D                         l3489 035A                         l3593 0099  
                       l3585 006E                         l3577 004D                         l3569 002D  
                       l3665 0102                         l3657 00E6                         l3649 00CE  
                       l3681 0286                         l3673 027E                         l3587 0080  
                       l3579 0051                         l3595 00A1                         l3667 010B  
                       l3659 00E7                         l3683 0287                         l3675 027F  
                       l3691 02DC                         l3597 00A5                         l3589 008E  
                       l3685 0288                         l3677 0282                         l3669 0250  
                       l3693 02E3                         l3599 00B1                         l3679 0283  
                       l3687 02D3                         l3695 031D                         l3689 02D4  
                       l3697 0322                         l3699 032A                         STR_1 0306  
                       STR_2 0315                         _BRGH 04C2                         _CREN 00C4  
                       u3010 009F                         u3011 009E                         u3020 00A5  
                       u3100 0260                         u3005 0091                         u3110 02ED  
                       u3111 02EC                         u3105 025B                         u3080 0166  
                       u3081 0165                         u2610 0187                         u3090 00E0  
                       u2611 0186                         u3091 00DF                         u2604 0175  
                       u2630 01B4                         u2631 01B3                         u2720 035F  
                       u2625 0194                         u2721 035E                         u2570 029E  
                       u2571 029D                         u2580 02AB                         u2581 02AA  
                       u2590 0172                         u2591 016E                         u2930 001A  
                       u2931 0019                         _PEIE 005E                         u2940 002D  
                       u2941 002C                         u2950 004D                         u2951 004C  
                       u2970 0063                         u2971 0062                         _RCIE 0465  
                       _RCIF 0065                         u2965 0053                         u2990 0080  
                       u2991 007F                         u2985 0067                         u2995 007C  
                       _OERR 00C1                         _SPEN 00C7                         _WREN 0C62  
                       _TXEN 04C5                         _TXIF 0064                         _SYNC 04C4  
                       _main 0204                         btemp 007E                         start 0011  
            __end_of_DelayMs 02AD                  _SYSTEM_INIT 031D                        ??_ISR 007A  
           __end_of_LCD_INIT 0116              __end_of___aldiv 00BB                   _Lcd_String 0116  
                      ?_main 0070                        _EEADR 010D                        _CARRY 0018  
                      _ANSEL 011E                        _IRCF0 047C                        _IRCF1 047D  
                      _IRCF2 047E                        i1l900 01C6                        i1l901 01D4  
                      i1l902 01F6                        i1l903 01F5                        i1l904 0203  
                      i1l905 0203                        i1l908 0376                        i1l970 02B9  
                      i1l971 02B9                        i1l972 02BE                        i1l973 02C3  
                      i1l968 02C3                        i1l969 02B8                        i1l899 01C7  
                      _RCREG 001A                        _SPBRG 0099                        _PORTC 0007  
                      _TRISA 0085                        _TRISC 0087                        _WPUA2 04AA  
                      _TXREG 0019           __size_of_UART_INIT 003A           _SendStringSerially 02D0  
                      pclath 000A          ?_SendStringSerially 0070                        status 0003  
                      wtemp0 007E             __end_of_Lcd_Char 0377                 __end_of_main 0250  
       ??_SendStringSerially 0021                       ??_main 0037           __size_of_Lcd_Write 004E  
                     _EEDATA 010C                       _EECON1 018C                       _EECON2 018D  
                     _ANSELH 011F                       i1l3441 036E                       i1l3611 01DD  
                     i1l3603 01B7                       i1l3621 01F6                       i1l3613 01DE  
                     i1l3605 01C1                       i1l3615 01EE                       i1l3607 01C7  
                     i1l3617 01EF                       i1l3609 01D4                       i1l3619 01F0  
                     i1l3493 02AD                       i1l3495 02B1                       i1l3497 02B5  
                     i1l3499 02BE                       u303_20 01BE                       u303_21 01BA  
                     u304_24 01C1                       u305_20 01D3                       u305_21 01D2  
                     u306_25 01E2                       u307_20 0202                       u307_21 0201  
                  ??_DelayMs 0022                       u273_20 02B1                       u273_21 02B0  
                     u274_20 02B5                       u274_21 02B4                       u275_20 02BD  
                     u275_21 02BC                 ?i1_Lcd_Write 0070            __end_of_UART_INIT 028A  
                     _nRABPU 040F                    ??___aldiv 0028                  ?_Lcd_String 0070  
   __end_of_SendByteSerially 0363                       saved_w 007E                    ?_LCD_INIT 0070  
          __end_of_Lcd_Write 01B6               __pcstackCOMMON 0070                 __pidataBANK0 0363  
       SendByteSerially@Byte 0020               Lcd_Write@_dcnt 0023                    ?_Lcd_Char 0070  
                 ??_LCD_INIT 0028          __size_of_Lcd_String 0052                 ?_SYSTEM_INIT 0070  
                 __pmaintext 0204                   __pintentry 0004                   _asciitable 0037  
                 ??_Lcd_Char 0078                      _DelayMs 028A         SendStringSerially@st 0022  
       __size_ofi1_Lcd_Write 004E                      ___aldiv 0013                 __size_of_ISR 0023  
           ___aldiv@dividend 0024         end_of_initialization 0354                i1Lcd_Write@rs 0073  
                    init_ram 033B                    Lcd_Char@c 0079             ___aldiv@quotient 002B  
                  _UART_INIT 0250                 ??_Lcd_String 0028  __size_of_SendStringSerially 001F  
          ?_SendByteSerially 0070           ??_SendByteSerially 0020          Lcd_Write@_dcnt_1579 0025  
          __size_of_LCD_INIT 005B           __end_of_Lcd_String 0168         __size_of_SYSTEM_INIT 001A  
                  _Lcd_Write 0168                   ?_UART_INIT 002F                 DelayMs@_dcnt 0022  
        start_initialization 0348                  __end_of_ISR 02D0            __size_of_Lcd_Char 000A  
           i1Lcd_Write@_dcnt 0074                   ?_Lcd_Write 0020                  __pdataBANK0 0037  
              __pcstackBANK0 0020                     ?_DelayMs 0020                     ?___aldiv 0020  
                  __ptext330 0250                    __ptext331 00BB                    __ptext340 0000  
                  __ptext332 0116                    __ptext333 0013                    __ptext334 0357  
                  __ptext335 0168                    __ptext336 028A                    __ptext328 031D  
                  __ptext337 02AD                    __ptext329 02D0                    __ptext338 036D  
                  __ptext339 01B6                  ??_UART_INIT 0033                    __pstrings 0300  
                   _LCD_INIT 00BB              ___aldiv@divisor 0020            interrupt_function 0004  
            ___aldiv@counter 0029                 i1Lcd_Write@c 0070                ??i1_Lcd_Write 0071  
                ??_Lcd_Write 0021                  __stringbase 0305                     _Lcd_Char 036D  
           __size_of_DelayMs 0023    __size_of_SendByteSerially 000C                    init_fetch 0337  
 __end_of_SendStringSerially 02EF          __end_ofi1_Lcd_Write 0204             __size_of___aldiv 00A8  
          UART_INIT@baudrate 002F                __size_of_main 004C                ??_SYSTEM_INIT 0024  
                 DelayMs@cnt 0020                  Lcd_String@s 0029                     intlevel1 0000  
                Lcd_Write@rs 0027                  i1_Lcd_Write 01B6                    stringcode 0300  
        __end_of_SYSTEM_INIT 0337                   Lcd_Write@c 0020                     stringdir 0300  
                   stringtab 0300                 ___aldiv@sign 002A        i1Lcd_Write@_dcnt_1579 0076  
           _SendByteSerially 0357  
